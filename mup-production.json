{
  // Server authentication info
  "servers": [
    {
      "host": "olisapp.com",
      "username": "root",
      // "password": "password",
      // or pem file (ssh based authentication)
      // WARNING: Keys protected by a passphrase are not supported
      "pem": "~/.ssh/id_rsa",
      // Also, for non-standard ssh port use this
      //"sshOptions": { "port" : 49154 },
      // server specific environment variables
      "env": {}
    }
  ],

  // Install MongoDB on the server. Does not destroy the local MongoDB on future setups
  "setupMongo": true,

  // Application name (no spaces).
  "appName": "olis",

  // Location of app (local directory). This can reference '~' as the users home directory.
  // i.e., "app": "~/Meteor/my-app",
  // This is the same as the line below.
  "app": ".",

  // Configure environment
  // ROOT_URL must be set to your correct domain (https or http)
  "env": {
    "PORT": 80,
    "ROOT_URL": "http://olisapp.com"
  },

  // Meteor Up checks if the app comes online just after the deployment.
  // Before mup checks that, it will wait for the number of seconds configured below.
  "deployCheckWaitTime": 60,

  // show a progress bar while uploading.
  // Make it false when you deploy using a CI box.
  "enableUploadProgressBar": true,

  "buildOptions": {
    // build with the debug mode on, will show as localhost in Meteor.absoluteUrl()
    "debug": false
  },

  // If you do the following link:
  // https://medium.com/@timbrandin/host-your-own-secure-galaxy-with-let-s-encrypt-mongodb-and-meteor-up-mup-b657211d1268#.gcfi0nxnb
  // Comment out the ssl field below, since mupx will try to setup its own nginx on port 80.
  "ssl": {
    "certificate": "./fullchain.pem", // this is a bundle of certificates
    "key": "./privkey.pem", // this is the private key of the certificate
    "port": 443 // 443 is the default value and it's the standard HTTPS port
  }  
}