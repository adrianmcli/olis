{"version":3,"sources":["meteor://ðŸ’»app/packages/easysearch:core/lib/core/index.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/engine.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/reactive-engine.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/cursor.js","meteor://ðŸ’»app/packages/easysearch:core/lib/core/search-collection.js","meteor://ðŸ’»app/packages/easysearch:core/lib/engines/mongo-db.js","meteor://ðŸ’»app/packages/easysearch:core/lib/engines/minimongo.js","meteor://ðŸ’»app/packages/easysearch:core/lib/engines/mongo-text-index.js","meteor://ðŸ’»app/packages/easysearch:core/lib/globals.js"],"names":[],"mappings":"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","file":"/packages/easysearch_core.js","sourcesContent":["/**\n * An Index represents the main entry point for searching with EasySearch. It relies on\n * the given engine to have the search functionality and defines the data that should be searchable.\n *\n * @type {Index}\n */\nIndex = class Index {\n  /**\n   * Constructor\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    check(config, Object);\n    check(config.collection, Meteor.Collection);\n    check(config.fields, [String]);\n\n    if (!(config.engine instanceof Engine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof Engine');\n    }\n\n    if (!config.name)\n      config.name = (config.collection._name || '').toLowerCase();\n\n    this.config = _.extend(Index.defaultConfiguration, config);\n    this.defaultSearchOptions = _.defaults({}, this.config.defaultSearchOptions, { limit: 10, skip: 0, props: {} });\n\n    // Engine specific code on index creation\n    config.engine.onIndexCreate(this.config);\n  }\n\n  /**\n   * Default configuration for an index.\n   *\n   * @returns {Object}\n   */\n  static get defaultConfiguration() {\n    return {\n      permission: () => true,\n      defaultSearchOptions: {}\n    };\n  }\n\n  /**\n   * Search the index.\n   *\n   * @param {Object|String} searchDefinition Search definition\n   * @param {Object}        options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options = {}) {\n    this.config.engine.checkSearchParam(searchDefinition, this.config);\n\n    check(options, {\n      limit: Match.Optional(Number),\n      skip: Match.Optional(Number),\n      props: Match.Optional(Object)\n    });\n\n    options = {\n      search: this._getSearchOptions(options),\n      index: this.config\n    };\n\n    if (!this.config.permission(options.search)) {\n      throw new Meteor.Error('not-allowed', \"Not allowed to search this index!\");\n    }\n\n    return this.config.engine.search(searchDefinition, options);\n  }\n\n  /**\n   * Returns the search options based on the given options.\n   *\n   * @param {Object} options Options to use\n   *\n   * @returns {Object}\n   */\n  _getSearchOptions(options) {\n    return _.defaults(( Meteor.userId ? { userId: Meteor.userId() } : {} ), options, this.defaultSearchOptions);\n  }\n};\n","/**\n * An Engine is the technology used for searching with EasySearch, with\n * customizable configuration to how it interacts with the data from the Index.\n *\n * @type {Engine}\n */\nEngine = class Engine {\n  /**\n   * Constructor\n   *\n   * @param {Object} config configuration\n   *\n   * @constructor\n   */\n  constructor(config = {}) {\n    if (this.constructor === Engine) {\n      throw new Error('Cannot initialize instance of Engine');\n    }\n\n    if (!_.isFunction(this.search)) {\n      throw new Error('Engine needs to implement search method');\n    }\n\n    this.config = _.defaults({}, config, this.defaultConfiguration());\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return {};\n  }\n\n  /**\n   * Call a configuration method with the engine scope.\n   *\n   * @param {String} methodName Method name\n   * @param {Object} args       Arguments for the method\n   *\n   * @returns {*}\n   */\n  callConfigMethod(methodName, ...args) {\n    check(methodName, String);\n\n    let func = this.config[methodName];\n\n    if (func) {\n      return func.apply(this, args);\n    }\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n  checkSearchParam(search) {\n    check(search, String);\n  }\n\n  /**\n   *Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuraction\n   */\n  onIndexCreate(indexConfig) {\n    if (!indexConfig.allowedFields) {\n      indexConfig.allowedFields = indexConfig.fields;\n    }\n  }\n};\n","/**\n * A ReactiveEngine handles the reactive logic, such as subscribing\n * and publishing documents into a self contained collection.\n *\n * @type {ReactiveEngine}\n */\nReactiveEngine = class ReactiveEngine extends Engine {\n  /**\n   * Constructor.\n   *\n   * @param {Object} config Configuration\n   *\n   * @constructor\n   */\n  constructor(config) {\n    super(config);\n\n    if (this === this.constructor) {\n      throw new Error('Cannot initialize instance of ReactiveEngine');\n    }\n\n    if (!_.isFunction(this.getSearchCursor)) {\n      throw new Error('Reactive engine needs to implement getSearchCursor method');\n    }\n  }\n\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, {\n      transform: (doc) => doc,\n      beforePublish: (event, doc) => doc\n    }, super.defaultConfiguration());\n  }\n\n  /**\n   * Code to run on index creation\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n    indexConfig.searchCollection = new SearchCollection(indexConfig, this);\n    indexConfig.mongoCollection = indexConfig.searchCollection._collection;\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    if (_.isString(searchDefinition)) {\n      let obj = {};\n\n      _.each(options.index.fields, function (field) {\n        obj[field] = searchDefinition;\n      });\n\n      searchDefinition = obj;\n    }\n\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   * @param indexOptions\n   */\n  checkSearchParam(search, indexOptions) {\n    check(search, Match.OneOf(String, Object));\n\n    if (_.isObject(search)) {\n      _.each(search, function (val, field) {\n        check(val, String);\n\n        if (-1 === _.indexOf(indexOptions.allowedFields, field)) {\n          throw new Meteor.Error(`Not allowed to search over field \"${field}\"`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Reactively search on the collection.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  search(searchDefinition, options) {\n    if (Meteor.isClient) {\n      return options.index.searchCollection.find(searchDefinition, options.search);\n    } else {\n      return this.getSearchCursor(\n        this.transformSearchDefinition(searchDefinition, options),\n        options\n      );\n    }\n  }\n};\n","/**\n * A Cursor represents a pointer to the search results. Since it's specific\n * to EasySearch it can also be used to check for valid return values.\n *\n * @type {Cursor}\n */\nCursor = class Cursor {\n  /**\n   * Constructor\n   *\n   * @param {Mongo.Cursor} mongoCursor   Referenced mongo cursor\n   * @param {Number}       count         Count of all documents found\n   * @param {Boolean}      isReady       Cursor is ready\n   * @param {Object}       publishHandle Publish handle to stop if on client\n   *\n   * @constructor\n   *\n   */\n  constructor(mongoCursor, count, isReady = true, publishHandle = null) {\n    check(mongoCursor.fetch, Function);\n    check(count, Number);\n    check(isReady, Match.Optional(Boolean));\n    check(publishHandle, Match.OneOf(null, Object));\n\n    this._mongoCursor = mongoCursor;\n    this._count = count;\n    this._isReady = isReady;\n    this._publishHandle = publishHandle;\n  }\n\n  /**\n   * Fetch the search results.\n   *\n   * @returns {[Object]}\n   */\n  fetch() {\n    return this._mongoCursor.fetch();\n  }\n\n /**\n  * Stop the subscription handle associated with the cursor.\n  */\n  stop() {\n    if (this._publishHandle) {\n      return this._publishHandle.stop();\n    }\n  }\n\n  /**\n   * Return count of all documents found\n   *\n   * @returns {Number}\n   */\n  count() {\n    return this._count;\n  }\n\n  /**\n   * Return if the cursor is ready.\n   *\n   * @returns {Boolean}\n   */\n  isReady() {\n    return this._isReady;\n  }\n\n  /**\n   * Return the raw mongo cursor.\n   *\n   * @returns {Mongo.Cursor}\n   */\n  get mongoCursor() {\n    return this._mongoCursor;\n  }\n\n  /**\n   * Return a fake empty cursor, without data.\n   *\n   * @returns {Object}\n   */\n  static get emptyCursor() {\n    return { fetch: () => [], observe: () => { return { stop: () => null }; }, stop: () => {} };\n  }\n};\n","/**\n * A search collection represents a reactive collection on the client,\n * which is used by the ReactiveEngine for searching.\n *\n * @type {SearchCollection}\n */\nSearchCollection = class SearchCollection {\n  /**\n   * Constructor\n   *\n   * @param {Object}         indexConfiguration Index configuration\n   * @param {ReactiveEngine} engine             Reactive Engine\n   *\n   * @constructor\n   */\n  constructor(indexConfiguration, engine) {\n    check(indexConfiguration, Object);\n    check(indexConfiguration.name, Match.OneOf(String, null));\n\n    if (!(engine instanceof ReactiveEngine)) {\n      throw new Meteor.Error('invalid-engine', 'engine needs to be instanceof ReactiveEngine');\n    }\n\n    this._indexConfiguration = indexConfiguration;\n    this._name = `${indexConfiguration.name}/easySearch`;\n    this._engine = engine;\n\n    if (Meteor.isClient) {\n      this._collection = new Meteor.Collection(this._name);\n    } else if (Meteor.isServer) {\n      this._setUpPublication();\n    }\n  }\n\n  /**\n   * Get name\n   *\n   * @returns {String}\n   */\n  get name() {\n    return this._name;\n  }\n\n  /**\n   * Get engine\n   *\n   * @returns {ReactiveEngine}\n   */\n  get engine() {\n    return this._engine;\n  }\n\n  /**\n   * Find documents on the client.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Options\n   *\n   * @returns {Cursor}\n   */\n  find(searchDefinition, options) {\n    if (!Meteor.isClient) {\n      throw new Error('find can only be used on client');\n    }\n\n    let publishHandle = Meteor.subscribe(this.name, searchDefinition, options);\n\n    let count = this._getCount(searchDefinition);\n    let mongoCursor = this._getMongoCursor(searchDefinition, options);\n\n    if (!_.isNumber(count)) {\n      return new Cursor(mongoCursor, 0, false);\n    }\n\n    return new Cursor(mongoCursor, count, true, publishHandle);\n  }\n\n  /**\n   * Get the count of the cursor.\n   *\n   * @params {Object} searchDefinition Search definition\n   *\n   * @returns {Cursor.count}\n   *\n   * @private\n   */\n  _getCount(searchDefinition) {\n    let countDoc = this._collection.findOne('searchCount' + JSON.stringify(searchDefinition));\n\n    if (countDoc) {\n      return countDoc.count;\n    }\n  }\n\n  /**\n   * Get the mongo cursor.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Search options\n   *\n   * @returns {Cursor}\n   * @private\n   */\n  _getMongoCursor(searchDefinition, options) {\n    return this._collection.find(\n      { __searchDefinition: JSON.stringify(searchDefinition), __searchOptions: JSON.stringify(options.props) },\n      {\n        transform: (doc) => {\n          delete doc.__searchDefinition;\n          delete doc.__searchOptions;\n          delete doc.__sortPosition;\n\n          doc = this.engine.config.transform(doc);\n\n          return doc;\n        },\n        sort: ['__sortPosition']\n      }\n    );\n  }\n\n  /**\n   * Return a unique document id for publication.\n   *\n   * @param {Document} doc\n   *\n   * @returns string\n   */\n  generateId(doc) {\n    return doc._id + doc.__searchDefinition + doc.__searchOptions;\n  }\n\n  /**\n   * Add custom fields to the given document\n   *\n   * @param {Document} doc\n   * @param {Object}   data\n   * @returns {*}\n   */\n  addCustomFields(doc, data) {\n    _.forEach(data, function (val, key) {\n      doc['__' + key] = val;\n    });\n\n    return doc;\n  }\n\n  /**\n   * Set up publication.\n   *\n   * @private\n   */\n  _setUpPublication() {\n    var collectionScope = this,\n      collectionName = this.name;\n\n    Meteor.publish(collectionName, function (searchDefinition, options) {\n      check(searchDefinition, Match.OneOf(String, Object));\n      check(options, Object);\n\n      let definitionString = JSON.stringify(searchDefinition),\n        optionsString = JSON.stringify(options.props);\n\n      options.userId = this.userId;\n      options.publicationScope = this;\n\n      if (!collectionScope._indexConfiguration.permission(options)) {\n        throw new Meteor.Error('not-allowed', \"You're not allowed to search this index!\");\n      }\n\n      collectionScope.engine.checkSearchParam(searchDefinition, collectionScope._indexConfiguration);\n\n      let cursor = collectionScope.engine.search(searchDefinition, {\n        search: options,\n        index: collectionScope._indexConfiguration\n      });\n\n      const count = cursor.count();\n\n      this.added(collectionName, 'searchCount' + definitionString, { count: count });\n\n      let resultsHandle = cursor.mongoCursor.observe({\n        addedAt: (doc, atIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('addedAt', doc, atIndex, before);\n          doc = collectionScope.addCustomFields(doc, {\n            searchDefinition: definitionString,\n            searchOptions: optionsString,\n            sortPosition: atIndex,\n            originalId: doc._id\n          });\n\n          this.added(collectionName, collectionScope.generateId(doc), doc);\n        },\n        changedAt: (doc, oldDoc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('changedAt', doc, oldDoc, atIndex);\n          doc = collectionScope.addCustomFields(doc, {\n            searchDefinition: definitionString,\n            searchOptions: optionsString,\n            sortPosition: atIndex,\n            originalId: doc._id\n          });\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc)\n        },\n        movedTo: (doc, fromIndex, toIndex, before) => {\n          doc = collectionScope.engine.config.beforePublish('movedTo', doc, fromIndex, toIndex, before);\n          doc = collectionScope.addCustomFields(doc, {\n            searchDefinition: definitionString,\n            searchOptions: optionsString,\n            sortPosition: toIndex\n          });\n\n          let beforeDoc = collectionScope._indexConfiguration.collection.findOne(before);\n\n          if (beforeDoc) {\n            beforeDoc = collectionScope.addCustomFields(beforeDoc, {\n              searchDefinition: definitionString,\n              searchOptions: optionsString,\n              sortPosition: fromIndex\n            });\n            this.changed(collectionName, collectionScope.generateId(beforeDoc), beforeDoc);\n          }\n\n          this.changed(collectionName, collectionScope.generateId(doc), doc);\n        },\n        removedAt: (doc, atIndex) => {\n          doc = collectionScope.engine.config.beforePublish('removedAt', doc, atIndex);\n          doc = collectionScope.addCustomFields(doc, { searchDefinition: definitionString, searchOptions: optionsString });\n          this.removed(collectionName, collectionScope.generateId(doc));\n        }\n      });\n\n      this.onStop(function () {\n        resultsHandle.stop();\n      });\n\n      this.ready();\n    });\n  }\n};\n","/**\n * The MongoDBEngine lets you search the index on the server side with MongoDB. Subscriptions and publications\n * are handled within the Engine.\n *\n * @type {MongoDBEngine}\n */\nMongoDBEngine = class MongoDBEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Default mongo configuration, used in constructor and MinimongoEngine to get the configuration.\n   *\n   * @param {Object} engineScope Scope of the engine\n   *\n   * @returns {Object}\n   */\n  static defaultMongoConfiguration(engineScope) {\n    return {\n      aggregation: '$or',\n      selector(searchObject, options, aggregation) {\n        let selector = {};\n\n        selector[aggregation] = [];\n\n        _.each(searchObject, (searchString, field) => {\n          let fieldSelector = engineScope.callConfigMethod(\n            'selectorPerField', field, searchString, options\n          );\n\n          if (fieldSelector) {\n            selector[aggregation].push(fieldSelector);\n          }\n        });\n\n        return selector;\n      },\n      selectorPerField(field, searchString) {\n        let selector = {};\n\n        selector[field] = { '$regex' : `.*${searchString}.*`, '$options' : 'i'};\n\n        return selector\n      },\n      sort(searchObject, options) {\n        return options.index.fields;\n      }\n    };\n  }\n\n  /**\n   * Return the find options for the mongo find query.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getFindOptions(searchDefinition, options) {\n    return {\n      sort: this.callConfigMethod('sort', searchDefinition, options),\n      limit: options.search.limit,\n      skip: options.search.skip,\n      fields: this.callConfigMethod('fields', searchDefinition, options)\n    };\n  }\n\n  /**\n   * Return the reactive search cursor.\n   *\n   * @param {String} searchDefinition Search definition\n   * @param {Object} options          Search and index options\n   */\n  getSearchCursor(searchDefinition, options) {\n    let selector = this.callConfigMethod('selector', searchDefinition, options, this.config.aggregation),\n      findOptions = this.getFindOptions(searchDefinition, options),\n      collection = options.index.collection;\n\n    check(options, Object);\n    check(selector, Object);\n    check(findOptions, Object);\n\n    return new Cursor(\n      collection.find(selector, findOptions),\n      collection.find(selector).count()\n    );\n  }\n};\n","/**\n * The MinimongEngine lets you search the index on the client-side.\n *\n * @type {MinimongoEngine}\n */\nMinimongoEngine = class MinimongoEngine extends Engine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    return _.defaults({}, MongoDBEngine.defaultMongoConfiguration(this), super.defaultConfiguration());\n  }\n\n  /**\n   * Search the index.\n   *\n   * @param {Object} searchDefinition Search definition\n   * @param {Object} options          Object of options\n   *\n   * @returns {cursor}\n   */\n  search(searchDefinition, options) {\n    if (!Meteor.isClient) {\n      throw new Meteor.Error('only-client', 'Minimongo can only be used on the client');\n    }\n\n    searchDefinition = this.transformSearchDefinition(searchDefinition, options);\n\n    // check() calls are in getSearchCursor method\n    return MongoDBEngine.prototype.getSearchCursor.apply(this, [searchDefinition, options]);\n  }\n};\n\nMinimongoEngine.prototype.checkSearchParam = ReactiveEngine.prototype.checkSearchParam;\nMinimongoEngine.prototype.transformSearchDefinition = ReactiveEngine.prototype.transformSearchDefinition;\n\nMinimongoEngine.prototype.getFindOptions = function (...args) {\n  let findOptions = MongoDBEngine.prototype.getFindOptions.apply(this, args);\n\n  findOptions.transform = this.config.transform;\n\n  return findOptions;\n};\n","/**\n * The MongoTextIndexEngine lets you search the index with Mongo text indexes.\n *\n * @type {MongoTextIndexEngine}\n */\nMongoTextIndexEngine = class MongoTextIndexEngine extends ReactiveEngine {\n  /**\n   * Return default configuration.\n   *\n   * @returns {Object}\n   */\n  defaultConfiguration() {\n    let mongoConfiguration = MongoDBEngine.defaultMongoConfiguration(this);\n\n    mongoConfiguration.selector = function (searchString) {\n      if (searchString.trim()) {\n        return { $text: { $search: searchString } };\n      }\n\n      return {};\n    };\n\n    return _.defaults({}, mongoConfiguration, super.defaultConfiguration());\n  }\n\n  /**\n   * Setup the index on creation.\n   *\n   * @param {Object} indexConfig Index configuration\n   */\n  onIndexCreate(indexConfig) {\n    super.onIndexCreate(indexConfig);\n\n    if (Meteor.isServer) {\n      let textIndexesConfig = {};\n\n      _.each(indexConfig.fields, function (field) {\n        textIndexesConfig[field] = 'text';\n      });\n\n      if (indexConfig.weights) {\n        textIndexesConfig.weights = options.weights();\n      }\n\n      indexConfig.collection._ensureIndex(textIndexesConfig);\n    }\n  }\n\n  /**\n   * Transform the search definition.\n   *\n   * @param {String|Object} searchDefinition Search definition\n   * @param {Object}        options          Search and index options\n   *\n   * @returns {Object}\n   */\n  transformSearchDefinition(searchDefinition, options) {\n    return searchDefinition;\n  }\n\n  /**\n   * Check the given search parameter for validity\n   *\n   * @param search\n   */\n  checkSearchParam(search) {\n    check(search, String);\n  }\n};\n\n// Explicitely inherit getSearchCursor method functionality\nMongoTextIndexEngine.prototype.getSearchCursor = MongoDBEngine.prototype.getSearchCursor;\nMongoTextIndexEngine.prototype.getFindOptions = MongoDBEngine.prototype.getFindOptions;\n","EasySearch = {\n  // Core\n  Index,\n  Engine,\n  ReactiveEngine,\n  Cursor,\n  // Engines\n  MongoDB: MongoDBEngine,\n  Minimongo: MinimongoEngine,\n  MongoTextIndex: MongoTextIndexEngine\n};\n"]}