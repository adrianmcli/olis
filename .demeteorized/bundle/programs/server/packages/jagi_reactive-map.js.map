{"version":3,"sources":["meteor://ðŸ’»app/packages/jagi_reactive-map/lib/reactive_map.js"],"names":[],"mappingsfile":"/packages/jagi_reactive-map.js","sourcesContent":["var changed = function(v) {\n  v && v.changed();\n};\n\nReactiveMap = function(data) {\n  this._values = {};\n  this._size = 0;\n\n  // Tracking the \"size\" method.\n  this._sizeDep = new Tracker.Dependency;\n  // Tracking \"entries\" and \"all\" methods.\n  this._entriesDep = new Tracker.Dependency;\n  // Tracking the \"key\" method.\n  this._keysDep = new Tracker.Dependency;\n  // Tracking the \"values\" method.\n  this._valuesDep = new Tracker.Dependency;\n  // Tracking key existence.\n  this._keysDeps = {};\n  // Tracking values under keys.\n  this._valuesDeps = {};\n\n  // Initialize a map.\n  if (data) {\n    this.set(data);\n  }\n};\n\n_.extend(ReactiveMap.prototype, {\n  _ensureKey: function(key) {\n    if (!_.has(this._valuesDeps, key)) {\n      this._keysDeps[key] = new Tracker.Dependency;\n      this._valuesDeps[key] = new Tracker.Dependency;\n    }\n  },\n\n  // Getters.\n\n  get: function(key) {\n    this._ensureKey(key);\n    this._valuesDeps[key].depend();\n\n    return this._values[key];\n  },\n\n  has: function(key) {\n    this._ensureKey(key);\n    this._keysDeps[key].depend();\n\n    return _.has(this._values, key);\n  },\n\n  entries: function() {\n    this._entriesDep.depend();\n\n    return _.map(this._values, function(value, key) {\n      return [key, value];\n    });\n  },\n\n  all: function() {\n    this._entriesDep.depend();\n\n    var all = {};\n    _.each(this._values, function(value, key) {\n      all[key] = value;\n    });\n\n    return all;\n  },\n\n  keys: function() {\n    this._keysDep.depend();\n\n    return _.keys(this._values);\n  },\n\n  values: function() {\n    this._valuesDep.depend();\n\n    var values = [];\n    _.each(this._values, function(value, key) {\n      values.push(value);\n    });\n\n    return values;\n  },\n\n  size: function() {\n    this._sizeDep.depend();\n\n    return this._size;\n  },\n\n  // Modifiers.\n\n  _setOne: function(key, value) {\n    if (_.has(this._values, key)) {\n      if (value === this._values[key]) {\n        return;\n      }\n      this._values[key] = value;\n    } else {\n      this._size++;\n      this._values[key] = value;\n\n      this._sizeDep.changed();\n      this._keysDep.changed();\n      changed(this._keysDeps[key]);\n    }\n\n    this._valuesDep.changed();\n    this._entriesDep.changed();\n    changed(this._valuesDeps[key]);\n  },\n\n  _setMany: function(values) {\n    var self = this;\n\n    _.each(values, function(value, key) {\n      self._setOne(key, value);\n    });\n  },\n\n  set: function() {\n    if (arguments.length === 1 && _.isObject(arguments[0])) {\n      this._setMany.apply(this, arguments);\n    } else if (arguments.length === 2) {\n      this._setOne.apply(this, arguments);\n    }\n\n    return this;\n  },\n\n  delete: function(key) {\n    if (!_.has(this._values, key)) {\n      return false;\n    }\n\n    delete this._values[key];\n    this._size--;\n\n    changed(this._valuesDeps[key]);\n    changed(this._keysDeps[key]);\n    this._sizeDep.changed();\n    this._entriesDep.changed();\n    this._keysDep.changed();\n    this._valuesDep.changed();\n\n    return true;\n  },\n\n  clear: function() {\n    var self = this;\n\n    var keys = _.keys(this._values);\n    this._values = {};\n    this._size = 0;\n\n    this._sizeDep.changed();\n    this._entriesDep.changed();\n    this._keysDep.changed();\n    this._valuesDep.changed();\n\n    _.each(keys, function(key) {\n      changed(self._keysDeps[key]);\n      changed(self._valuesDeps[key]);\n    });\n  }\n});\n"]}