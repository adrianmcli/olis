{"version":3,"sources":["meteor://ðŸ’»app/lib/constants/lang_codes.js","meteor://ðŸ’»app/lib/constants/msgs.js","meteor://ðŸ’»app/lib/constants/widgets.js","meteor://ðŸ’»app/lib/vendor/WhyDidYouUpdateMixin.js","meteor://ðŸ’»app/lib/vendor/perf.js","meteor://ðŸ’»app/lib/collections.js","meteor://ðŸ’»app/lib/convo.js","meteor://ðŸ’»app/lib/invite.js","meteor://ðŸ’»app/lib/lock.js","meteor://ðŸ’»app/lib/msg.js","meteor://ðŸ’»app/lib/note.js","meteor://ðŸ’»app/lib/notification.js","meteor://ðŸ’»app/lib/section.js","meteor://ðŸ’»app/lib/team.js","meteor://ðŸ’»app/lib/translation.js","meteor://ðŸ’»app/lib/widget.js","meteor://ðŸ’»app/server/methods/_myTest.js","meteor://ðŸ’»app/server/methods/account.js","meteor://ðŸ’»app/server/methods/convos.js","meteor://ðŸ’»app/server/methods/images.js","meteor://ðŸ’»app/server/methods/index.js","meteor://ðŸ’»app/server/methods/invites.js","meteor://ðŸ’»app/server/methods/locks.js","meteor://ðŸ’»app/server/methods/msgs.js","meteor://ðŸ’»app/server/methods/notes.js","meteor://ðŸ’»app/server/methods/notifications.js","meteor://ðŸ’»app/server/methods/sections.js","meteor://ðŸ’»app/server/methods/teams.js","meteor://ðŸ’»app/server/methods/translation.js","meteor://ðŸ’»app/server/methods/widgets.js","meteor://ðŸ’»app/server/publications/_myTest.js","meteor://ðŸ’»app/server/publications/convos.js","meteor://ðŸ’»app/server/publications/index.js","meteor://ðŸ’»app/server/publications/invites.js","meteor://ðŸ’»app/server/publications/msgs.js","meteor://ðŸ’»app/server/publications/notes.js","meteor://ðŸ’»app/server/publications/notifications.js","meteor://ðŸ’»app/server/publications/search.js","meteor://ðŸ’»app/server/publications/sections.js","meteor://ðŸ’»app/server/publications/teams.js","meteor://ðŸ’»app/server/publications/translations.js","meteor://ðŸ’»app/server/publications/users.js","meteor://ðŸ’»app/server/SearchSource.js","meteor://ðŸ’»app/server/cloudinary.js","meteor://ðŸ’»app/server/email.js","meteor://ðŸ’»app/server/main.js","meteor://ðŸ’»app/wallaby.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["// key: Language Code, value: English Name\n// https://msdn.microsoft.com/en-us/library/hh456380.aspx\nexport default {\n  ar: 'Arabic',\n  'bs-Latn': 'Bosnian (Latin)',\n  bg: 'Bulgarian',\n  ca: 'Catalan',\n  'zh-CHS': 'Chinese Simplified',\n  'zh-CHT': 'Chinese Traditional',\n  hr: 'Croatian',\n  cs: 'Czech',\n  da: 'Danish',\n  nl: 'Dutch',\n  en: 'English',\n  et: 'Estonian',\n  fi: 'Finnish',\n  fr: 'French',\n  de: 'German',\n  el: 'Greek',\n  ht: 'Haitian Creole',\n  he: 'Hebrew',\n  hi: 'Hindi',\n  mww: 'Hmong Daw',\n  hu: 'Hungarian',\n  id: 'Indonesian',\n  it: 'Italian',\n  ja: 'Japanese',\n  sw: 'Kiswahili',\n  tlh: 'Klingon',\n  'tlh-Qaak': 'Klingon (pIqaD)',\n  ko: 'Korean',\n  lv: 'Latvian',\n  lt: 'Lithuanian',\n  ms: 'Malay',\n  mt: 'Maltese',\n  no: 'Norwegian',\n  fa: 'Persian',\n  pl: 'Polish',\n  pt: 'Portuguese',\n  otq: 'QuerÃ©taro Otomi',\n  ro: 'Romanian',\n  ru: 'Russian',\n  'sr-Cyrl': 'Serbian (Cyrillic)',\n  'sr-Latn': 'Serbian (Latin)',\n  sk: 'Slovak',\n  sl: 'Slovenian',\n  es: 'Spanish',\n  sv: 'Swedish',\n  th: 'Thai',\n  tr: 'Turkish',\n  uk: 'Ukrainian',\n  ur: 'Urdu',\n  vi: 'Vietnamese',\n  cy: 'Welsh',\n  yua: 'Yucatec Maya',\n};\n","export const PUBLISH_INTERVAL = 15;\nexport const NEW_CONVO_VISIBLE = PUBLISH_INTERVAL;\nexport const VISIBLE_INTERVAL = 15;\n","export const ItemTypes = {\n  WIDGET: 'widget'\n};\n","/* eslint-disable no-console */\nimport _ from 'underscore';\n\n/*\nDrop this mixin into a component that wastes time according to Perf.getWastedTime() to find\nout what state/props should be preserved. Once it says \"Update avoidable!\" for {state, props},\nyou should be able to drop in React.addons.PureRenderMixin\nReact.createClass {\n  mixins: [WhyDidYouUpdateMixin]\n}\n*/\nfunction isRequiredUpdateObject(o) {\n  return Array.isArray(o) || (o && o.constructor === Object.prototype.constructor);\n}\n\nfunction deepDiff(o1, o2, p) {\n  const notify = (status) => {\n    console.warn('Update %s', status);\n    console.log('%cbefore', 'font-weight: bold', o1);\n    console.log('%cafter ', 'font-weight: bold', o2);\n  };\n  if (!_.isEqual(o1, o2)) {\n    console.group(p);\n    if ([o1, o2].every(_.isFunction)) {\n      notify('avoidable?');\n    } else if (![o1, o2].every(isRequiredUpdateObject)) {\n      notify('required.');\n    } else {\n      const keys = _.union(_.keys(o1), _.keys(o2));\n      for (const key of keys) {\n        deepDiff(o1[key], o2[key], key);\n      }\n    }\n    console.groupEnd();\n  } else if (o1 !== o2) {\n    console.group(p);\n    notify('avoidable!');\n    if (_.isObject(o1) && _.isObject(o2)) {\n      const keys = _.union(_.keys(o1), _.keys(o2));\n      for (const key of keys) {\n        deepDiff(o1[key], o2[key], key);\n      }\n    }\n    console.groupEnd();\n  }\n}\n\nconst WhyDidYouUpdateMixin = {\n  componentDidUpdate(prevProps, prevState) {\n    deepDiff({props: prevProps, state: prevState},\n             {props: this.props, state: this.state},\n             this.constructor.displayName);\n  },\n};\n\nexport default WhyDidYouUpdateMixin;\n","Perf = require('react-addons-perf');","import {Meteor} from 'meteor/meteor';\nimport {Mongo} from 'meteor/mongo';\n\nexport const Teams = new Mongo.Collection('teams');\nexport const Convos = new Mongo.Collection('convos');\nexport const Messages = new Mongo.Collection('messages');\nexport const Notes = new Mongo.Collection('notes');\nexport const Sections = new Mongo.Collection('sections');\nexport const Notifications = new Mongo.Collection('notifications');\nexport const Invites = new Mongo.Collection('invites');\nexport const Translations = new Mongo.Collection('translations');\nexport const Widgets = new Mongo.Collection('widgets');\nexport const Locks = new Mongo.Collection('locks');\n\n// For test module\nexport const Posts = new Mongo.Collection('posts');\n\n// Building indexes\nexport const buildIndexes = () => {\n  if (Meteor.isServer) {\n    Messages._ensureIndex({\n      text: 'text',\n      username: 'text',\n      translation: 'text'\n    });\n\n    Convos._ensureIndex({\n      name: 'text'\n    });\n\n    Meteor.users._ensureIndex({\n      username: 'text',\n      'emails.address': 'text'\n    });\n\n    // TODO notes\n  }\n};\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Convos} from './collections';\nimport R from 'ramda';\n\nconst Convo = Astro.Class({\n  name: 'Convo',\n  collection: Convos,\n  fields: {\n    name: {\n      type: 'string',\n      default() { return 'Default convo name'; }\n    },\n    userIds: {\n      type: 'array',\n      default() { return []; }\n    },\n    teamId: {\n      type: 'string',\n      default() { return 'noTeamId'; }\n    },\n    firstMsgCreatedAt: {\n      type: 'date',\n      default() { return null; }\n    },\n    lastMsgText: {\n      type: 'string',\n      default() { return null; }\n    },\n    lastMsgCreatedAt: {\n      type: 'date',\n      default() { return null; }\n    },\n    recentUserIds: {\n      type: 'array',\n      default() { return []; }\n    },\n    recentUsernames: {\n      type: 'array',\n      default() { return []; }\n    },\n    numMsgs: {\n      type: 'number',\n      default() { return 0; }\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  },\n  methods: {\n    isUserInConvo(input) {\n      const userIds = input.constructor === Array ? input : [ input ];\n      return R.intersection(userIds, this.userIds).length === userIds.length;\n    },\n    isUserAdmin() {\n      return true; // TODO implement new role for convo admin\n    },\n    getName(userId, convoUsers) {\n      if (this.userIds.length === 1 || this.userIds.length > 2) { return this.name; }\n      if (this.userIds.length === 2 && this.name === '') {\n        const otherUserId = R.filter(id => id !== userId, this.userIds);\n        return convoUsers[otherUserId].username;\n      }\n      return this.name;\n    }\n  }\n});\nexport default Convo;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Invites} from './collections';\n\nconst Invite = Astro.Class({\n  name: 'Invite',\n  collection: Invites,\n  fields: {\n    userId: {\n      type: 'string'\n    },\n    teamId: {\n      type: 'string'\n    },\n    invitedBy: {\n      type: 'string'\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  }\n});\nexport default Invite;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Locks} from './collections';\n\nconst Lock = Astro.Class({\n  name: 'Lock',\n  collection: Locks,\n  fields: {\n    noteId: {\n      type: 'string'\n    },\n    widgetId: {\n      type: 'string'\n    },\n    userId: {\n      type: 'string'\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  }\n});\nexport default Lock;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Messages} from './collections';\n\nconst Message = Astro.Class({\n  name: 'Message',\n  collection: Messages,\n  fields: {\n    text: {\n      type: 'string',\n      default() { return 'Default Message'; }\n    },\n    userId: {\n      type: 'string'\n    },\n    username: { // Fall back for users who have been kicked out of team\n      type: 'string',\n      default() { return 'Default username.'; }\n    },\n    convoId: {\n      type: 'string',\n    },\n    convoName: {\n      type: 'string',\n      default() { return 'Default Convo Name'; }\n    },\n    translation: {\n      type: 'object',\n      default() { return {}; }\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  }\n});\nexport default Message;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Notes} from './collections';\nimport R from 'ramda';\n\nconst Note = Astro.Class({\n  name: 'Note',\n  collection: Notes,\n  fields: {\n    convoId: {\n      type: 'string'\n    },\n    title: {\n      type: 'string',\n      default() { return 'Default Note'; }\n    },\n    widgetIds: {\n      type: 'array',\n      default() { return []; }\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  },\n  methods: {\n    isEmpty() {\n      // return R.isEmpty(this.sectionIds);\n      return R.isEmpty(this.widgetIds);\n    }\n  }\n});\nexport default Note;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Notifications} from './collections';\n\nconst Notification = Astro.Class({\n  name: 'Notification',\n  collection: Notifications,\n  fields: {\n    userId: {\n      type: 'string',\n      default() { return 'noUserId'; }\n    },\n    teamId: {\n      type: 'string',\n      default() { return 'noTeamId'; }\n    },\n    convoId: {\n      type: 'string',\n      default() { return 'noConvoId'; }\n    },\n    convoName: {\n      type: 'string',\n      default() { return 'default convo name'; }\n    },\n    recentUsernames: {\n      type: 'array',\n      default() { return []; }\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  },\n  methods: {\n    belongsToUser(userId) {\n      return this.userId === userId;\n    }\n  }\n});\nexport default Notification;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Sections} from './collections';\n\nconst Section = Astro.Class({\n  name: 'Section',\n  collection: Sections,\n  fields: {\n    noteId: {\n      type: 'string'\n    },\n    text: {\n      type: 'string',\n      default() { return '<p><br></p>'; } // Without <br>, the user won't be able to edit on click.\n    },\n    editingByUserId: {\n      type: 'string',\n      default() { return null; }\n    },\n    unlocksAt: {\n      type: 'date',\n      default() { return new Date(0); }\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  },\n  methods: {\n    canEdit(userId) {\n      return this.editingByUserId === userId || Date.now() > this.unlocksAt;\n    },\n\n    isUserEditing(userId) {\n      return this.editingByUserId === userId && Date.now() < this.unlocksAt;\n    }\n  }\n});\nexport default Section;\n","import {Meteor} from 'meteor/meteor';\nimport {Astro} from 'meteor/jagi:astronomy';\nimport {Teams} from './collections';\nimport R from 'ramda';\nimport {Roles} from 'meteor/alanning:roles';\n\nconst Team = Astro.Class({\n  name: 'Team',\n  collection: Teams,\n  fields: {\n    name: {\n      type: 'string',\n      default() { return 'Default Team'; }\n    },\n    userIds: {\n      type: 'array',\n      default() { return []; }\n    },\n    info: {\n      type: 'string',\n      default() { return 'Give your team members some information about what the team is about.'; }\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  },\n  methods: {\n    isUserInTeam(input) {\n      const userIds = input.constructor === Array ? input : [ input ];\n      return R.intersection(userIds, this.userIds).length === userIds.length;\n    },\n    isUserAdmin(userId) {\n      return Roles.userIsInRole(userId, 'admin', this._id);\n    },\n    isUserMember(userId) {\n      return Roles.userIsInRole(userId, 'admin', this._id) ||\n        Roles.userIsInRole(userId, 'member', this._id);\n    },\n    getRolesForUser(userId) {\n      return Roles.getRolesForUser(userId, this._id);\n    }\n  }\n});\n// Meteor toys is basically the server, can see the server only fields too\n// but if you do console log on client, won't see it.\nif (Meteor.isServer) {\n  Team.extend({\n    fields: {\n      serverOnly: {\n        type: 'string',\n        default() { return 'Only server guys can read this.'; }\n      }\n    }\n  });\n}\nexport default Team;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Translations} from './collections';\n\nconst Translation = Astro.Class({\n  name: 'Translation',\n  collection: Translations,\n  fields: {\n    msgId: {\n      type: 'string'\n    },\n    convoId: {\n      type: 'string'\n    },\n    langCode: {\n      type: 'string'\n    },\n    text: {\n      type: 'string'\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  }\n});\nexport default Translation;\n","import {Astro} from 'meteor/jagi:astronomy';\nimport {Widgets} from './collections';\n\nconst Widget = Astro.Class({\n  name: 'Widget',\n  collection: Widgets,\n  fields: {\n    noteId: {\n      type: 'string'\n    },\n    type: {\n      type: 'string',\n      default() { return null; }\n    },\n    data: {\n      type: 'object',\n      default() { return null; }\n    }\n  },\n  behaviors: {\n    timestamp: {\n      hasCreatedField: true,\n      createdFieldName: 'createdAt',\n      hasUpdatedField: true,\n      updatedFieldName: 'updatedAt'\n    }\n  },\n});\nexport default Widget;\n","import {\n  Posts, Comments, Messages, Teams, Convos,\n  Notifications, Invites, Notes, Sections, Translations,\n  Widgets, Locks\n} from '../../lib/collections';\nimport Team from '/lib/team';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  Meteor.methods({\n    '_makeFakeConvo'(teamId, num) {\n      check(teamId, String);\n      check(num, Number);\n      const convoId = Meteor.call('convos.add', {name: 'fake convo', userIds: [], teamId});\n      for (let i = 1; i <= num; i++) {\n        Meteor.call('msgs.add', {text: `${i}`, convoId});\n      }\n    }\n  });\n\n  Meteor.methods({\n    '_wipeDbAndInitialize'() {\n      Meteor.users.remove({});\n      Teams.remove({});\n      Convos.remove({});\n      Messages.remove({});\n      Notes.remove({});\n      Sections.remove({});\n      Notifications.remove({});\n      Invites.remove({});\n      Translations.remove({});\n      Widgets.remove({});\n      Locks.remove({});\n\n      const langCode = 'en';\n\n      const userId = Accounts.createUser({\n        email: 'test@test.com',\n        username: 'test',\n        password: '1'\n      });\n      Meteor.users.update(userId, {\n        $set: {translationLangCode: langCode}\n      });\n\n      const userId2 = Accounts.createUser({\n        email: 'invite@test.com',\n        username: 'invite',\n        password: '1'\n      });\n      Meteor.users.update(userId2, {\n        $set: {translationLangCode: langCode}\n      });\n\n      const userId3 = Accounts.createUser({\n        email: 'invite2@test.com',\n        username: 'invite2',\n        password: '1'\n      });\n      Meteor.users.update(userId3, {\n        $set: {translationLangCode: langCode}\n      });\n\n      const team = new Team();\n      team.set({name: 'my cool team', userIds: [ userId, userId2, userId3 ]});\n      team.save();\n\n      Roles.addUsersToRoles(userId, [ 'admin' ], team._id);\n      Roles.addUsersToRoles([ userId2, userId3 ], [ 'member' ], team._id);\n    }\n  });\n\n  Meteor.methods({\n    'posts.create'(_id, title, content) {\n      check(_id, String);\n      check(title, String);\n      check(content, String);\n\n      // Show the latency compensations\n      Meteor._sleepForMs(3000);\n\n      // XXX: Do some user authorization\n      const createdAt = new Date();\n      const post = {_id, title, content, createdAt};\n      Posts.insert(post);\n    }\n  });\n\n  Meteor.methods({\n    'posts.createComment'(_id, postId, text) {\n      check(_id, String);\n      check(postId, String);\n      check(text, String);\n\n      // Show the latency compensations\n      Meteor._sleepForMs(3000);\n\n      // XXX: Do some user authorization\n      const createdAt = new Date();\n      const author = 'The User';\n      const comment = {_id, postId, author, text, createdAt};\n      Comments.insert(comment);\n    }\n  });\n\n  const ACCOUNT_REGISTER = 'test.register';\n  Meteor.methods({\n    'test.register'({email, username, password}) {\n      check(arguments[0], {\n        email: String,\n        username: String,\n        password: String\n      });\n\n      function create(reject) {\n        try {\n          console.log('create');\n          const userId = Accounts.createUser({username, email, password});\n        }\n        catch (e) {\n          reject(e);\n        }\n      }\n\n      function someTask() {\n        console.log('someTask');\n      }\n\n      function longReject(reject) {\n        console.log('longReject start');\n        try {\n          Meteor._sleepForMs(3000);\n          throw new Meteor.Error(ACCOUNT_REGISTER, 'long reject end meteor error');\n\n          // Doesn't work\n          // Meteor.setTimeout(() => {\n          //   throw new Meteor.Error(ACCOUNT_REGISTER, 'long reject end meteor error');\n          // }, 3000);\n        }\n        catch (e) {\n          reject({reason: 'long reject end'});\n        }\n      }\n\n      function someTask2() {\n        console.log('someTask2');\n      }\n\n      return new Promise((resolve, reject) => {\n        // Everything will run, if something fails, that error will be sent back to client\n        create(reject);\n        someTask();\n        longReject(reject);\n        someTask2();\n        resolve(`Welcome ${username}!`);\n      })\n      .then((res) => res)\n      .catch((err) => {\n        console.log(err);\n        throw new Meteor.Error(ACCOUNT_REGISTER, err.reason); // Sent back to client\n      });\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Convos, Teams, Messages} from '/lib/collections';\nimport Team from '/lib/team';\nimport Convo from '/lib/convo';\nimport {check} from 'meteor/check';\nimport {Random} from 'meteor/random';\nimport {Roles} from 'meteor/alanning:roles';\nimport R from 'ramda';\nimport EmailValidator from 'email-validator';\nimport {Cloudinary} from 'meteor/lepozepo:cloudinary';\n\nexport default function () {\n\n  const ACCOUNT_REGISTER_TEAM = 'account.register.createTeam';\n  Meteor.methods({\n    'account.register.createTeam'({teamName}) {\n      check(arguments[0], {\n        teamName: String\n      });\n\n      // Account creation called from client side, so user is logged in already.\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_REGISTER_TEAM, 'Must be logged in to create team.');\n      }\n      Meteor.call('account.setTranslationLanguage', {langCode: 'en'});\n\n      // Add users to team and set roles\n      const team = new Team();\n      team.set({\n        name: teamName,\n        userIds: [ userId ]\n      });\n      team.save();\n      Roles.addUsersToRoles(userId, [ 'admin' ], team._id);\n\n      return {teamId: team._id};\n    }\n  });\n\n  const ACCOUNT_REGISTER_TEAM_CONVO = 'account.register.createTeamAndConvo';\n  Meteor.methods({\n    'account.register.createTeamAndConvo'({teamName}) {\n      check(arguments[0], {\n        teamName: String\n      });\n\n      // Account creation called from client side, so user is logged in already.\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_REGISTER_TEAM_CONVO, 'Must be logged in to create team and convo.');\n      }\n      Meteor.call('account.setTranslationLanguage', {langCode: 'en'});\n\n      // Add users to team and set roles\n      const team = new Team();\n      team.set({\n        name: teamName,\n        userIds: [ userId ]\n      });\n      team.save();\n      Roles.addUsersToRoles(userId, [ 'admin' ], team._id);\n\n      const convoId = Meteor.call('convos.add', {\n        name: 'Your first chat!',\n        userIds: [ userId ],\n        teamId: team._id}\n      );\n\n      return {teamId: team._id, convoId};\n    }\n  });\n\n  const ACCOUNT_REGISTER_NO_PWD = 'account.register.noPassword';\n  Meteor.methods({\n    'account.register.noPassword'({email, username, teamName}) {\n      check(arguments[0], {\n        email: String,\n        username: String,\n        teamName: String,\n      });\n      Meteor.call(ACCOUNT_VALIDATE_EMAIL, {email});\n      Meteor.call(ACCOUNT_VALIDATE_USERNAME, {username});\n      Meteor.call(ACCOUNT_VALIDATE_TEAMNAME, {teamName});\n\n      const password = Random.secret(15);\n      const userId = Accounts.createUser({username, email, password});\n      Meteor.users.update(userId, { $set: {isRegistering: true} });\n\n      // Add users to team and set roles\n      const team = new Team();\n      team.set({\n        name: teamName,\n        userIds: [ userId ]\n      });\n      team.save();\n      Roles.addUsersToRoles(userId, [ 'admin' ], team._id);\n      Accounts.sendResetPasswordEmail(userId);\n\n      return {password, teamId: team._id};\n    }\n  });\n\n  const ACCOUNT_LAST_TIME_CONVO = 'account.setLastTimeInConvo';\n  Meteor.methods({\n    'account.setLastTimeInConvo'({convoId}) {\n      check(arguments[0], {\n        convoId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_LAST_TIME_CONVO, 'Must be logged in to set last time in convo.');\n      }\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(ACCOUNT_LAST_TIME_CONVO, 'Must set last time in an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(ACCOUNT_LAST_TIME_CONVO, 'Must be member of convo to set last time in it.');\n      }\n\n      let setObj = {};\n      setObj[`lastTimeInConvo.${convoId}`] = {\n        timestamp: new Date(),\n        numMsgs: Messages.find({convoId}).count()\n      };\n      const modifier = { $set: setObj };\n      Meteor.users.update(userId, modifier);\n    }\n  });\n\n  const ACCOUNT_LAST_TIME_TEAM = 'account.setLastTimeInTeam';\n  Meteor.methods({\n    'account.setLastTimeInTeam'({teamId}) {\n      check(arguments[0], {\n        teamId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_LAST_TIME_TEAM, 'Must be logged in to set last time in team.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(ACCOUNT_LAST_TIME_TEAM, 'Must set last time in an existing team.');\n      }\n      if (!team.isUserInTeam(userId)) {\n        throw new Meteor.Error(ACCOUNT_LAST_TIME_TEAM, 'Must be member of team to set last time in it.');\n      }\n\n      let setObj = {};\n      setObj[`lastTimeInTeam.${teamId}`] = new Date();\n      const modifier = { $set: setObj };\n      Meteor.users.update(userId, modifier);\n    }\n  });\n\n  const ACCOUNT_VALIDATE_EMAIL = 'account.validateEmail';\n  Meteor.methods({\n    'account.validateEmail'({email}) {\n      check(arguments[0], {\n        email: String\n      });\n      if (!EmailValidator.validate(email)) {\n        throw new Meteor.Error(ACCOUNT_VALIDATE_EMAIL, 'Please enter a proper email.');\n      }\n      const user = Accounts.findUserByEmail(email);\n      if (user) {\n        throw new Meteor.Error(ACCOUNT_VALIDATE_EMAIL,\n          `The email ${email} is taken. Please enter another one.`);\n      }\n    }\n  });\n\n  const ACCOUNT_VALIDATE_USERNAME = 'account.validateUsername';\n  Meteor.methods({\n    'account.validateUsername'({username}) {\n      check(arguments[0], {\n        username: String\n      });\n\n      const nameTrim = username.trim();\n      if (nameTrim === '') {\n        throw new Meteor.Error(ACCOUNT_VALIDATE_USERNAME,\n          'Please enter a non-blank username.');\n      }\n      const user = Accounts.findUserByUsername(username);\n      if (user) {\n        throw new Meteor.Error(ACCOUNT_VALIDATE_USERNAME,\n          `The username ${username} is taken. Please enter another one.`);\n      }\n    }\n  });\n\n  const ACCOUNT_VALIDATE_TEAMNAME = 'account.validateTeamName';\n  Meteor.methods({\n    'account.validateTeamName'({teamName}) {\n      check(arguments[0], {\n        teamName: String\n      });\n\n      const nameTrim = teamName.trim();\n      if (nameTrim === '') {\n        throw new Meteor.Error(ACCOUNT_VALIDATE_USERNAME, 'Please enter a non-blank username.');\n      }\n    }\n  });\n\n  const ACCOUNT_VALIDATE_PASSWORD = 'account.validatePassword';\n  Meteor.methods({\n    'account.validatePassword'({password}) {\n      check(arguments[0], {\n        password: String\n      });\n\n      const trimPwd = password.trim();\n      if (trimPwd === '') {\n        throw new Meteor.Error(ACCOUNT_VALIDATE_PASSWORD, 'Please enter a non-blank password.');\n      }\n\n      // Other things we want to validate...\n    }\n  });\n\n  const ACCOUNT_FIND_MY_TEAM = 'account.findMyTeam';\n  Meteor.methods({\n    'account.findMyTeam'({email}) {\n      check(arguments[0], {\n        email: String\n      });\n\n      if (!EmailValidator.validate(email)) {\n        throw new Meteor.Error(ACCOUNT_FIND_MY_TEAM, 'Enter a proper email.');\n      }\n      const existingUser = Accounts.findUserByEmail(email);\n      if (!existingUser) {\n        throw new Meteor.Error(ACCOUNT_FIND_MY_TEAM,\n          `No teams found for ${email}. Create an account`);\n      }\n\n      Meteor.users.update(existingUser._id, {\n        $set: {findingMyTeam: true}\n      });\n      Accounts.sendEnrollmentEmail(existingUser._id);\n    }\n  });\n\n  const ACCOUNT_PROFILE_PIC = 'account.addProfilePic';\n  Meteor.methods({\n    'account.addProfilePic'({cloudinaryPublicId}) {\n      check(arguments[0], {\n        cloudinaryPublicId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_PROFILE_PIC, 'Must be logged in to change profile picture.');\n      }\n      if (R.isEmpty(cloudinaryPublicId)) {\n        throw new Meteor.Error(ACCOUNT_PROFILE_PIC,\n          'cloudinaryPublicId cannot be an empty string.'\n        );\n      }\n\n      Meteor.users.update(userId, {\n        $set: {profileImageUrl: Cloudinary.url(cloudinaryPublicId)}\n      });\n    }\n  });\n\n  const ACCOUNT_SET_USERNAME = 'account.setUsername';\n  Meteor.methods({\n    'account.setUsername'({username}) {\n      check(arguments[0], {\n        username: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_SET_USERNAME, 'Must be logged in to change username.');\n      }\n      Meteor.call('account.validateUsername', {username});\n      Accounts.setUsername(userId, username);\n    }\n  });\n\n  const ACCOUNT_SET_EMAIL = 'account.setEmail';\n  Meteor.methods({\n    'account.setEmail'({email}) {\n      check(arguments[0], {\n        email: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_SET_EMAIL, 'Must be logged in to change email.');\n      }\n      const user = Meteor.users.findOne(userId);\n      Meteor.call('account.validateEmail', {email});\n      Accounts.removeEmail(userId, user.emails[0].address);\n      Accounts.addEmail(userId, email); // This does not check for proper email form, only existence in DB\n    }\n  });\n\n  const ACCOUNT_SET_TRANSLATION_LANG = 'account.setTranslationLanguage';\n  Meteor.methods({\n    'account.setTranslationLanguage'({langCode}) {\n      check(arguments[0], {\n        langCode: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_SET_TRANSLATION_LANG,\n          'Must be logged in to change translation language.');\n      }\n      Meteor.users.update(userId, {\n        $set: {translationLangCode: langCode}\n      });\n    }\n  });\n\n  // SERVER ONLY\n  const ACCOUNT_REMOVE_FROM_TEAM = 'account.removeFromTeam';\n  Meteor.methods({\n    'account.removeFromTeam'({removeUserId, teamId}) {\n      check(arguments[0], {\n        removeUserId: String,\n        teamId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(ACCOUNT_REMOVE_FROM_TEAM, 'Must be logged in to remove user from team.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(ACCOUNT_REMOVE_FROM_TEAM, 'Must remove user from existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(ACCOUNT_REMOVE_FROM_TEAM, 'Must be an admin to remove user from team.');\n      }\n\n      const convos = Convos.find({teamId}).fetch();\n      const convoIdsToUnset = convos.reduce((prev, curr) => {\n        const convo = {\n          [`lastTimeInConvo.${curr._id}`]: ''\n        };\n        return R.merge(prev, convo);\n      }, {});\n\n      const unsetObj = R.merge({\n        [`roles.${teamId}`]: '',\n        [`lastTimeInTeam.${teamId}`]: '',\n      }, convoIdsToUnset);\n\n      Meteor.users.update(removeUserId, {\n        $unset: unsetObj\n      });\n    }\n  });\n\n  // SERVER ONLY\n  const ACCOUNT_FORGOT_PWD = 'account.forgotPassword';\n  Meteor.methods({\n    'account.forgotPassword'({email}) {\n      check(arguments[0], {\n        email: String\n      });\n\n      if (!EmailValidator.validate(email)) {\n        throw new Meteor.Error(ACCOUNT_FORGOT_PWD, 'Enter a proper email.');\n      }\n      const existingUser = Accounts.findUserByEmail(email);\n      if (!existingUser) {\n        throw new Meteor.Error(ACCOUNT_FORGOT_PWD,\n          `No user found with email: ${email}. Create an account.`);\n      }\n      Accounts.sendResetPasswordEmail(existingUser._id);\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {\n  Convos, Teams, Notifications, Messages, Notes, Sections\n} from '/lib/collections';\nimport Convo from '/lib/convo';\nimport Note from '/lib/note';\nimport Section from '/lib/section';\nimport {check} from 'meteor/check';\nimport R from 'ramda';\n\nexport default function () {\n  const CONVOS_ADD = 'convos.add';\n  Meteor.methods({\n    'convos.add'({name, userIds, teamId}) {\n      check(arguments[0], {\n        name: String,\n        userIds: [ String ],\n        teamId: String,\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(CONVOS_ADD, 'Must be logged in to insert convo.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(CONVOS_ADD, 'Must add convo to existing team.');\n      }\n      if (!team.isUserInTeam(userId)) {\n        throw new Meteor.Error(CONVOS_ADD, 'Must be a member of team to add new convo.');\n      }\n      if (!team.isUserInTeam(userIds)) {\n        throw new Meteor.Error(CONVOS_ADD, 'Only users in the team can be added to the convo.');\n      }\n\n      const convo = new Convo();\n      const newUserIds = [ userId, ...userIds ];\n      const uniqueUserIds = R.uniq(newUserIds);\n      const recentUserIds = R.takeLast(2, uniqueUserIds);\n      const recentUsers = Meteor.users.find({_id: {$in: recentUserIds}}).fetch();\n      const recentUsernames = recentUsers.map(x => x.username);\n\n      convo.set({\n        name,\n        userIds: uniqueUserIds,\n        recentUserIds,\n        recentUsernames,\n        teamId});\n      convo.save();\n      const convoId = convo._id;\n\n      Meteor.call('notes.add', {convoId});\n\n      return convoId;\n    }\n  });\n\n  const CONVOS_ADD_MEMBERS = 'convos.addMembers';\n  Meteor.methods({\n    'convos.addMembers'({convoId, userIds}) {\n      const userId = this.userId;\n      check(arguments[0], {\n        convoId: String,\n        userIds: [ String ]\n      });\n\n      if (!userId) {\n        throw new Meteor.Error(CONVOS_ADD_MEMBERS, 'Must be logged in to add members to convo.');\n      }\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(CONVOS_ADD_MEMBERS, 'Must add members to an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(CONVOS_ADD_MEMBERS,\n          'Must already be a member of convo to add new members.');\n      }\n      const team = Teams.findOne(convo.teamId);\n      if (!team.isUserInTeam(userIds)) {\n        throw new Meteor.Error(CONVOS_ADD_MEMBERS,\n          'Only users in the team can be added to the convo.');\n      }\n\n      const newUserIds = [ ...convo.userIds, ...userIds ];\n      const uniqueUserIds = R.uniq(newUserIds);\n      const recentUserIds = R.takeLast(2, uniqueUserIds);\n      const recentUsers = Meteor.users.find({_id: {$in: recentUserIds}}).fetch();\n      const recentUsernames = recentUsers.map(x => x.username);\n\n      convo.set({\n        userIds: uniqueUserIds,\n        recentUserIds,\n        recentUsernames,\n      });\n      convo.save();\n\n      return convo;\n    }\n  });\n\n  // SERVER ONLY\n  const CONVOS_REMOVE_USER_FROM_TEAM = 'convos.removeUserFromTeam';\n  Meteor.methods({\n    'convos.removeUserFromTeam'({removeUserId, teamId}) {\n      check(arguments[0], {\n        removeUserId: String,\n        teamId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(CONVOS_REMOVE_USER_FROM_TEAM,\n          'Must be logged in to remove users from convo.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(CONVOS_REMOVE_USER_FROM_TEAM,\n          'Must remove users from existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(CONVOS_REMOVE_USER_FROM_TEAM,\n          'Must be an admin to remove users from all convos in team.');\n      }\n\n      const convos = Convos.find({userIds: removeUserId}).fetch();\n      convos.forEach(convo => {\n        convo.set({userIds: R.filter(id => id !== removeUserId, convo.userIds)});\n        convo.save();\n      });\n    }\n  });\n\n  // SERVER ONLY\n  const CONVOS_IS_MEMBER = 'convos.isMember';\n  Meteor.methods({\n    'convos.isMember'({convoId}) {\n      check(arguments[0], {\n        convoId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(CONVOS_IS_MEMBER, 'Must be logged in to view convo.');\n      }\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(CONVOS_IS_MEMBER, 'Must be a member of existing convo.');\n      }\n      Meteor.call('teams.isMember', {teamId: convo.teamId});\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(CONVOS_IS_MEMBER, 'User is not a member of convo.');\n      }\n\n      return convo.isUserInConvo(userId);\n    }\n  });\n\n  const CONVOS_SET_NAME = 'convos.setName';\n  Meteor.methods({\n    'convos.setName'({convoId, name}) {\n      check(arguments[0], {\n        convoId: String,\n        name: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(CONVOS_SET_NAME, 'Must be logged in to set chat name.');\n      }\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(CONVOS_SET_NAME, 'Must set the name of an existing chat.');\n      }\n      if (!convo.isUserAdmin(userId)) {\n        throw new Meteor.Error(CONVOS_SET_NAME, 'Must be an admin of chat to set the chat name.');\n      }\n\n      convo.set({name});\n      convo.save();\n    }\n  });\n\n  // SERVER ONLY\n  const CONVOS_REMOVE = 'convos.remove';\n  Meteor.methods({\n    'convos.remove'({convoId}) {\n      check(arguments[0], {\n        convoId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(CONVOS_REMOVE, 'Must be logged in to remove convo.');\n      }\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(CONVOS_REMOVE, 'Must remove an existing convo.');\n      }\n      const team = Teams.findOne(convo.teamId);\n      if (!team) {\n        throw new Meteor.Error(CONVOS_REMOVE, 'Must remove a convo from an existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(CONVOS_REMOVE, 'Must be a team admin to remove a convo.');\n      }\n\n      // Remove from all convo users last time in convo as well.\n      const selector = { _id: { $in: convo.userIds } };\n      const unsetObj = { [`lastTimeInConvo.${convoId}`]: '' };\n      const modifier = { $unset: unsetObj };\n      const options = { multi: true };\n      Meteor.users.update(selector, modifier, options);\n\n      // Remove all associated data for this convo\n      Messages.remove({convoId});\n\n      const note = Notes.findOne({convoId});\n      Notes.remove({convoId});\n      Sections.remove({noteId: note._id});\n\n      Notifications.remove({convoId});\n\n      // Remove convo\n      convo.remove();\n    }\n  });\n\n  const CONVOS_LEAVE = 'convos.leave';\n  Meteor.methods({\n    'convos.leave'({convoId}) {\n      check(arguments[0], {\n        convoId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(CONVOS_LEAVE, 'Must be logged in to leave convo.');\n      }\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(CONVOS_LEAVE, 'Must leave an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(CONVOS_LEAVE, 'Must leave a convo you are a part of.');\n      }\n\n      // Update user\n      const selector = userId;\n      const unsetObj = { [`lastTimeInConvo.${convoId}`]: '' };\n      const modifier = { $unset: unsetObj };\n      Meteor.users.update(selector, modifier);\n\n      // Remove id from convo\n      const userIds = convo.userIds;\n      convo.set({\n        userIds: R.filter(id => id !== userId, userIds)\n      });\n      convo.save();\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\n\nexport default function () {\n  Meteor.methods({\n    'images.add'() {\n      console.log('cloudinary haha');\n    }\n  });\n}\n","import test from './_myTest';\nimport account from './account';\nimport teams from './teams';\nimport convos from './convos';\nimport msgs from './msgs';\nimport notes from './notes';\nimport sections from './sections';\nimport notifications from './notifications';\nimport images from './images';\nimport invites from './invites';\nimport translation from './translation';\nimport widgets from './widgets';\nimport locks from './locks';\n\nexport default function () {\n  test();\n  account();\n  teams();\n  convos();\n  msgs();\n  notes();\n  sections();\n  notifications();\n  images();\n  invites();\n  translation();\n  widgets();\n  locks();\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Invites} from '/lib/collections';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const INVITES_REMOVE = 'invites.remove';\n  Meteor.methods({\n    'invites.remove'({teamId}) {\n      check(arguments[0], {\n        teamId: String,\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(INVITES_REMOVE, 'Must be logged in to select invite.');\n      }\n      const invite = Invites.findOne({teamId});\n      if (!invite) {\n        throw new Meteor.Error(INVITES_REMOVE, 'Must select a existing invite.');\n      }\n\n      invite.remove();\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Locks} from '/lib/collections';\nimport R from 'ramda';\nimport {check} from 'meteor/check';\nimport Lock from '/lib/lock';\n\nexport default function () {\n  Meteor.methods({\n    'locks.requestAndRelease'({noteId, requestedWidgetId}) {\n      check(arguments[0], {\n        noteId: String,\n        requestedWidgetId: String\n      });\n\n      const userId = this.userId;\n\n      const lock = Locks.findOne(requestedWidgetId);\n      const getCanTakeOver = () => {\n        if (lock) {\n          const timeout = 5000;\n          const timeDiff = new Date() - lock.updatedAt;\n          return timeDiff >= timeout;\n        }\n        return true;\n      };\n      const canTakeOver = getCanTakeOver();\n\n      if (!lock || canTakeOver) {\n        const newLock = new Lock();\n        newLock.set({\n          noteId,\n          widgetId: requestedWidgetId,\n          userId\n        });\n        newLock.save();\n      }\n      // Meteor.call('releaseLocks', {rawId, user, blockKeys: releaseBlockKeys});\n    }\n  });\n\n  // Meteor.methods({\n  //   releaseLocks({rawId, blockKeys, user}) {\n  //     const userId = user._id;\n  //     Locks.remove({\n  //       userId,\n  //       rawId,\n  //       blockKey: { $in: blockKeys }\n  //     });\n  //   }\n  // });\n\n  // Meteor.methods({\n  //   releaseAllLocks({user}) {\n  //     if (user) {\n  //       const userId = user._id;\n  //       Locks.remove({ userId });\n  //     }\n  //     else { Locks.remove({}); }\n\n  //   }\n  // });\n\n  // Meteor.methods({\n  //   releaseOtherLocks({rawId, blockKeys, user}) {\n  //     const userId = user._id;\n  //     Locks.remove({\n  //       userId,\n  //       rawId,\n  //       blockKey: { $nin: blockKeys }\n  //     });\n  //   }\n  // });\n\n  // Meteor.methods({\n  //   editBlock({rawId, user, rawDraftContentState, block}) {\n  //     // console.log(block);\n\n  //     // RawDraftContentStates.update(rawId, rawDraftContentState);\n  //     const lock = Locks.findOne({blockKey: block.key, userId: user._id});\n  //     if (lock) {\n  //       Locks.update(lock._id, {\n  //         $set: { updatedAt: new Date() }\n  //       });\n  //     }\n  //   }\n  // });\n}\n","import {Meteor} from 'meteor/meteor';\nimport Convos from '/lib/convo';\nimport Message from '/lib/msg';\nimport Notification from '/lib/notification';\nimport {Messages, Notifications} from '/lib/collections';\nimport {check} from 'meteor/check';\nimport R from 'ramda';\n\nexport default function () {\n  const MSGS_ADD = 'msgs.add';\n  Meteor.methods({\n    'msgs.add'({text, convoId}) {\n      check(arguments[0], {\n        text: String,\n        convoId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(MSGS_ADD, 'Must be logged in to insert msgs.');\n      }\n      const user = Meteor.users.findOne(userId);\n\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(MSGS_ADD, 'Must post messages to an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(MSGS_ADD, 'Must be a part of convo to add msgs');\n      }\n\n      const msg = new Message();\n      msg.set({text, userId, username: user.username, convoId, convoName: convo.name});\n      msg.save();\n\n      // Update convo with last msg text\n      const uniqueRecentUserIds = R.uniq(convo.recentUserIds);\n      const oldRecentUserIds = uniqueRecentUserIds.length >= 2 ?\n        R.takeLast(2, uniqueRecentUserIds) : R.takeLast(2, convo.userIds);\n\n      const recentUserIds = R.takeLast(2, R.uniq([ ...oldRecentUserIds, userId ]));\n      const recentUsers = Meteor.users.find({_id: {$in: recentUserIds}});\n      const recentUsernames = recentUsers.map(recentUser => recentUser.username);\n\n      const getConvoFields = () => {\n        const baseFields = {\n          lastMsgText: text,\n          lastMsgCreatedAt: msg.createdAt,\n          recentUserIds,\n          recentUsernames,\n          numMsgs: Messages.find({convoId}).count() // SERVER ONLY\n        };\n\n        if (Messages.find({convoId}).count() === 1) {\n          const firstMsgCreatedAt = msg.createdAt;\n          return R.merge(baseFields, {firstMsgCreatedAt});\n        }\n        return baseFields;\n      };\n\n      convo.set(getConvoFields());\n      convo.save();\n\n      // Notify convo users, other than yourself, SERVER ONLY\n      const otherUserIds = R.filter(otherId => otherId !== userId, convo.userIds);\n      const username = Meteor.users.findOne(userId).username;\n\n      otherUserIds.map(otherId => {\n        const oldNotif = Notifications.findOne({\n          userId: otherId,\n          teamId: convo.teamId,\n          convoId: convo._id\n        });\n        if (!oldNotif) {\n          const notif = new Notification();\n          notif.set({\n            userId: otherId,\n            teamId: convo.teamId,\n            convoId: convo._id,\n            convoName: convo.name,\n            recentUsernames: [ username ]\n          });\n          notif.save();\n        }\n        else {\n          const oldRecentUsernames = oldNotif.recentUsernames;\n          const notifRecentUsernames = R.uniq([ ...oldRecentUsernames, username ]);\n          oldNotif.set({recentUsernames: notifRecentUsernames});\n          oldNotif.save();\n        }\n      });\n\n      return msg; // Will return _id, and the server side only stuff too\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Convos, Teams} from '/lib/collections';\nimport Note from '/lib/note';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const NOTES_ADD = 'notes.add';\n  Meteor.methods({\n    'notes.add'({convoId}) {\n      check(arguments[0], {\n        convoId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(NOTES_ADD, 'Must be logged in to insert note.');\n      }\n      const convo = Convos.findOne(convoId);\n      if (!convo) {\n        throw new Meteor.Error(NOTES_ADD, 'Must insert note into existing convo.');\n      }\n      if (!convo.isUserInConvo) {\n        throw new Meteor.Error(NOTES_ADD, 'Must be a member of convo to insert note into it.');\n      }\n      const team = Teams.findOne(convo.teamId);\n      if (!team) {\n        throw new Meteor.Error(NOTES_ADD, 'Must add note to existing team.');\n      }\n      if (!team.isUserInTeam(userId)) {\n        throw new Meteor.Error(NOTES_ADD, 'Must be a member of team to insert new note.');\n      }\n\n      // Insert a note\n      const note = new Note();\n      note.set({convoId: convo._id});\n      note.save();\n\n      // Insert a widget\n      Meteor.call('widgets.add', {noteId: note._id, type: 'editor'});\n\n      return convo._id;\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Notifications} from '/lib/collections';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const NOTIFICATIONS_REMOVE = 'notifications.remove';\n  Meteor.methods({\n    'notifications.remove'({convoId}) {\n      check(arguments[0], {\n        convoId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(NOTIFICATIONS_REMOVE, 'Must be logged in to remove notifications.');\n      }\n      const notif = Notifications.findOne({userId, convoId});\n      if (notif) {\n        if (!notif.belongsToUser(userId)) {\n          throw new Meteor.Error(NOTIFICATIONS_REMOVE, 'Can only remove notifications that belong to yourself.');\n        }\n        else { notif.remove(); }\n      }\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Sections, Convos, Notes} from '/lib/collections';\nimport Section from '/lib/section';\nimport {check, Match} from 'meteor/check';\nimport R from 'ramda';\n\nconst dateInXMin = (x) => {\n  const minutes = x * 60 * 1000;\n  return new Date(Date.now() + minutes);\n};\n\nexport default function () {\n  const SECTION_ADD = 'sections.add';\n  Meteor.methods({\n    'sections.add'({noteId, text, afterSectionId}) {\n      check(arguments[0], {\n        noteId: String,\n        text: Match.Optional(Match.OneOf(undefined, null, String)),\n        afterSectionId: Match.Optional(Match.OneOf(undefined, null, String))\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(SECTION_ADD, 'Must be logged in to edit note.');\n      }\n      const note = Notes.findOne(noteId);\n      if (!note) {\n        throw new Meteor.Error(SECTION_ADD, 'Must edit only existing notes.');\n      }\n      const convo = Convos.findOne(note.convoId);\n      if (!convo) {\n        throw new Meteor.Error(SECTION_ADD, 'Must edit only notes of existing convos.');\n      }\n      if (!convo.isUserInConvo(this.userId)) {\n        throw new Meteor.Error(SECTION_ADD, 'Must be a part of convo to edit its note.');\n      }\n\n      const section = new Section();\n      const unlocksAt = dateInXMin(5);\n\n      section.set({\n        noteId, text,\n        editingByUserId: this.userId,\n        unlocksAt\n      });\n      section.save();\n\n      const index = afterSectionId ? note.sectionIds.indexOf(afterSectionId) + 1 : 0;\n      const sectionIds = R.insert(index, section._id, note.sectionIds);\n\n      note.set({sectionIds});\n      note.save();\n\n      return section;\n    }\n  });\n\n  const SECTION_EDIT = 'sections.edit';\n  Meteor.methods({\n    'sections.edit'({sectionId, text}) {\n      check(arguments[0], {\n        sectionId: String,\n        text: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(SECTION_EDIT, 'Must be logged in to edit section.');\n      }\n      const section = Sections.findOne(sectionId);\n      if (!section) {\n        throw new Meteor.Error(SECTION_EDIT, 'Must edit only existing sections.');\n      }\n      const note = Notes.findOne(section.noteId);\n      if (!note) {\n        throw new Meteor.Error(SECTION_EDIT, 'Must edit only existing notes.');\n      }\n      const convo = Convos.findOne(note.convoId);\n      if (!convo) {\n        throw new Meteor.Error(SECTION_ADD, 'Must edit only notes of existing convos.');\n      }\n      if (!convo.isUserInConvo(this.userId)) {\n        throw new Meteor.Error(SECTION_ADD, 'Must be a part of convo to edit its note.');\n      }\n\n      if (section.canEdit(this.userId)) {\n        const unlocksAt = dateInXMin(5);\n        section.set({\n          text,\n          editingByUserId: this.userId,\n          unlocksAt\n        });\n\n        section.save();\n      }\n    }\n  });\n\n  const SECTION_RELEASE_LOCK = 'sections.releaseLock';\n  Meteor.methods({\n    'sections.releaseLock'({sectionId}) {\n      check(arguments[0], {\n        sectionId: String\n      });\n\n      const userId = this.userId;\n      const section = Sections.findOne(sectionId);\n      if (!section) {\n        throw new Meteor.Error(SECTION_RELEASE_LOCK, 'Must unlock an existing section.');\n      }\n      if (section.editingByUserId !== userId) {\n        throw new Meteor.Error(SECTION_RELEASE_LOCK, 'Can only unlock a section you are editing.');\n      }\n\n      section.set({\n        editingByUserId: null,\n        unlocksAt: new Date(0)\n      });\n      section.save();\n      return section;\n    }\n  });\n\n  const SECTION_ACQUIRE_LOCK = 'sections.acquireLock';\n  Meteor.methods({\n    'sections.acquireLock'({sectionId}) {\n      check(arguments[0], {\n        sectionId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(SECTION_ACQUIRE_LOCK, 'Must be logged in to acquire section lock.');\n      }\n      const section = Sections.findOne(sectionId);\n      if (!section) {\n        throw new Meteor.Error(SECTION_ACQUIRE_LOCK, 'Can only lock existing sections.');\n      }\n      const note = Notes.findOne(section.noteId);\n      const convo = Convos.findOne(note.convoId);\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(SECTION_ACQUIRE_LOCK, 'Must be a member of convo to acquire section locks.');\n      }\n\n      section.set({\n        editingByUserId: userId,\n        unlocksAt: dateInXMin(5)\n      });\n      section.save();\n      return section;\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Teams} from '/lib/collections';\nimport Team from '/lib/team';\nimport {check} from 'meteor/check';\nimport {Roles} from 'meteor/alanning:roles';\nimport R from 'ramda';\nimport EmailValidator from 'email-validator';\nimport Invite from '/lib/invite';\n\nexport default function () {\n  const TEAMS_ADD = 'teams.add';\n  Meteor.methods({\n    'teams.add'({name, userIds}) {\n      check(arguments[0], {\n        name: String,\n        userIds: [ String ]\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_ADD, 'Must be logged in to insert team.');\n      }\n\n      const newUserIds = [ userId, ...userIds ];\n      const uniqueUserIds = R.uniq(newUserIds);\n\n      // Can't use Meteor.setTimeout here\n      // Cuz simulation will insert obj, but server looks like it inserted nothing since we didn't block it.\n      // The simulated insert will revert to nothing. Then X time later the server will actually insert.\n      // Meteor._sleepForMs(3000);\n\n      const team = new Team();\n      team.set({name, userIds: uniqueUserIds});\n      team.save();\n\n      // Add users to roles\n      Roles.addUsersToRoles(userId, [ 'admin' ], team._id);\n      Roles.addUsersToRoles(userIds, [ 'member' ], team._id);\n\n      // return team; // Will return _id, and the server side only stuff too\n      return team._id;\n    }\n  });\n\n  const TEAMS_ADD_MEMBERS = 'teams.addMembers';\n  Meteor.methods({\n    'teams.addMembers'({teamId, userIds}) {\n      check(arguments[0], {\n        teamId: String,\n        userIds: [ String ]\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_ADD_MEMBERS, 'Must be logged in to insert team.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_ADD_MEMBERS, 'Must add members to an existing team.');\n      }\n      if (!team.isUserInTeam(userId)) {\n        throw new Meteor.Error(TEAMS_ADD_MEMBERS, 'Must be a part of team to add new members to it.');\n      }\n\n      Roles.addUsersToRoles(userIds, [ 'member' ], teamId);\n\n      const newUserIds = [ ...team.userIds, ...userIds ];\n      const uniqueUserIds = R.uniq(newUserIds);\n\n      team.set({userIds: uniqueUserIds});\n      team.save();\n\n      return team;\n    }\n  });\n\n  const TEAMS_SET_NAME = 'teams.setName';\n  Meteor.methods({\n    'teams.setName'({teamId, name}) {\n      check(arguments[0], {\n        teamId: String,\n        name: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_SET_NAME, 'Must be logged in to change team name.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_SET_NAME, 'Must change name of existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(TEAMS_SET_NAME, 'Must be admin to change name of team.');\n      }\n\n      team.set({name});\n      team.save();\n    }\n  });\n\n  const TEAMS_SET_INFO = 'teams.setInfo';\n  Meteor.methods({\n    'teams.setInfo'({teamId, info}) {\n      check(arguments[0], {\n        teamId: String,\n        info: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_SET_INFO, 'Must be logged in to set team info.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_SET_INFO, 'Must set info of existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(TEAMS_SET_INFO, 'Must be admin to set info of team.');\n      }\n\n      team.set({info});\n      team.save();\n    }\n  });\n\n  const TEAMS_SET_USER_ROLE = 'teams.setUserRole';\n  Meteor.methods({\n    'teams.setUserRole'({teamId, changeUserId, role}) {\n      check(arguments[0], {\n        teamId: String,\n        changeUserId: String,\n        role: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_SET_USER_ROLE, 'Must be logged in to change user roles.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_SET_USER_ROLE,\n          'Must change of role of user in existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(TEAMS_SET_USER_ROLE,\n          'Must be admin to change roles of team members.');\n      }\n      if (!team.isUserInTeam(changeUserId)) {\n        throw new Meteor.Error(TEAMS_SET_USER_ROLE,\n          'Must change role of existing user.');\n      }\n\n      const cleanRole = R.toLower(role);\n      const rolesList = [ 'admin', 'member' ];\n      if (!R.contains(cleanRole, rolesList)) {\n        throw new Meteor.Error(TEAMS_SET_USER_ROLE,\n          `Must change role to acceptable role. (${rolesList})`);\n      }\n\n      const teamUsers = Meteor.users.find({_id: {$in: team.userIds}}).fetch();\n      const getCurrentNumAdmins = () => {\n        const roles = teamUsers.map(teamUser => teamUser.roles[teamId]);\n        const count = R.countBy(_role => _role)(roles);\n        return count['admin'];\n      };\n      const changeUser = Meteor.users.findOne(changeUserId);\n      const wrongNumAdminsAfterRoleChange = () => {\n        return getCurrentNumAdmins() <= 1 && team.isUserAdmin(changeUser._id) && role === 'member';\n      };\n      if (wrongNumAdminsAfterRoleChange()) {\n        throw new Meteor.Error(TEAMS_SET_USER_ROLE,\n          'Must have at least one admin.');\n      }\n\n      const oldRoles = team.getRolesForUser(changeUserId);\n      Roles.removeUsersFromRoles(changeUserId, oldRoles[0], teamId);\n      Roles.addUsersToRoles(changeUserId, role, teamId);\n    }\n  });\n\n  // SERVER ONLY\n  const TEAMS_REMOVE_USER = 'teams.removeUser';\n  Meteor.methods({\n    'teams.removeUser'({teamId, removeUserId}) {\n      check(arguments[0], {\n        teamId: String,\n        removeUserId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_REMOVE_USER, 'Must be logged in to remove user.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_REMOVE_USER,\n          'Must remove from existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(TEAMS_REMOVE_USER,\n          'Must be admin to remove team members.');\n      }\n      if (!team.isUserInTeam(removeUserId)) {\n        throw new Meteor.Error(TEAMS_REMOVE_USER,\n          'Must remove existing user.');\n      }\n\n      const teamUsers = Meteor.users.find({_id: {$in: team.userIds}}).fetch();\n      const getCurrentNumAdmins = () => {\n        const roles = teamUsers.map(teamUser => teamUser.roles[teamId]);\n        const count = R.countBy(_role => _role)(roles);\n        return count['admin'];\n      };\n      const removeUser = Meteor.users.findOne(removeUserId);\n      const wrongNumAdminsAfterRemove = () => {\n        return getCurrentNumAdmins() <= 1 && team.isUserAdmin(removeUser._id);\n      };\n      if (wrongNumAdminsAfterRemove()) {\n        throw new Meteor.Error(TEAMS_REMOVE_USER,\n          'Must have at least one admin.');\n      }\n\n      // Remove user from team\n      team.set({\n        userIds: R.filter(id => id !== removeUserId, team.userIds)\n      });\n      team.save();\n\n      Meteor.call('account.removeFromTeam', {removeUserId, teamId});\n      Meteor.call('convos.removeUserFromTeam', {removeUserId, teamId});\n    }\n  });\n\n  // SERVER ONLY\n  const TEAMS_INVITE = 'teams.invite';\n  Meteor.methods({\n    'teams.invite'({inviteEmails, teamId}) {\n      check(arguments[0], {\n        inviteEmails: [ String ],\n        teamId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_INVITE, 'Must be logged in to invite people.');\n      }\n      const user = Meteor.users.findOne(userId);\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_INVITE, 'Must invite people to an existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(TEAMS_INVITE, 'Must be an admin to invite people to team.');\n      }\n\n      const validatedEmails = R.filter(email => EmailValidator.validate(email), inviteEmails);\n\n      const existingEmails = R.filter(email => {\n        const existingUser = Accounts.findUserByEmail(email);\n        return existingUser;\n      }, validatedEmails);\n\n      const newEmails = R.difference(validatedEmails, existingEmails);\n\n      function _create(email) {\n        const newId = Accounts.createUser({username: email, email});\n        Meteor.users.update(newId, { $set: {invitedBy: user.username} }); // This is so we can send the proper email\n        return newId;\n      }\n      function _invite(newId) {\n        const invite = new Invite();\n        invite.set({\n          userId: newId,\n          teamId,\n          invitedBy: user.username\n        });\n        invite.save();\n      }\n\n      const existingUserIds = existingEmails.map(email => {\n        const existingUser = Accounts.findUserByEmail(email);\n        _invite(existingUser._id);\n        return existingUser._id;\n      });\n\n      const newUserIds = newEmails.map(email => {\n        const newId = _create(email);\n        _invite(newId);\n        return newId;\n      });\n\n      // Update team\n      team.set({\n        userIds: R.uniq([ ...team.userIds, ...newUserIds, ...existingUserIds ]),\n      });\n      team.save();\n      Roles.addUsersToRoles([ ...newUserIds, ...existingUserIds ], [ 'member' ], teamId);\n\n      // Send out emails\n      newUserIds.forEach(id => Accounts.sendEnrollmentEmail(id));\n      existingEmails.forEach(email => {\n        Email.send({\n          from: 'Olis <contact.aheadstudios@gmail.com>',\n          to: email,\n          subject: 'You have been invited to a new Olis Team.',\n          text: `${user.username} has invited you to join their Olis team ${team.name}!\\n\\n\n            Sign in and accept their invite.`,\n        });\n      });\n    }\n  });\n\n  // SERVER ONLY\n  const TEAMS_IS_MEMBER = 'teams.isMember';\n  Meteor.methods({\n    'teams.isMember'({teamId}) {\n      check(arguments[0], {\n        teamId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_IS_MEMBER, 'Must be logged in to access team route.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_IS_MEMBER, 'Must be a member of existing team.');\n      }\n      if (!team.isUserMember(userId)) {\n        throw new Meteor.Error(TEAMS_IS_MEMBER, 'User is not a member of team.');\n      }\n\n      return team.isUserMember(userId);\n    }\n  });\n\n  // SERVER ONLY\n  const TEAMS_IS_ADMIN = 'teams.isAdmin';\n  Meteor.methods({\n    'teams.isAdmin'({teamId}) {\n      check(arguments[0], {\n        teamId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TEAMS_IS_ADMIN, 'Must be logged in to access team route.');\n      }\n      const team = Teams.findOne(teamId);\n      if (!team) {\n        throw new Meteor.Error(TEAMS_IS_ADMIN, 'Must be a member of existing team.');\n      }\n      if (!team.isUserAdmin(userId)) {\n        throw new Meteor.Error(TEAMS_IS_ADMIN, 'User is not an admin of team.');\n      }\n\n      return team.isUserAdmin(userId);\n    }\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\nimport {Microsoft} from 'meteor/devian:mstranslate';\nimport {Messages, Translations} from '/lib/collections';\nimport Translation from '/lib/translation';\n\nexport default function () {\n  const TRANSLATION_GET = 'translation.get';\n  Meteor.methods({\n    'translation.get'({msgId, langCode}) {\n      check(arguments[0], {\n        msgId: String,\n        langCode: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TRANSLATION_GET, 'Must be logged in to get a translation.');\n      }\n      const msg = Messages.findOne(msgId);\n      if (!msg) {\n        throw new Meteor.Error(TRANSLATION_GET, 'Must translate an existing message.');\n      }\n      const existingTrans = Translations.findOne({msgId, langCode});\n      if (!existingTrans) {\n        const text = msg.text;\n        const translated = Microsoft.translate(text, langCode);\n\n        const translation = new Translation({\n          msgId,\n          convoId: msg.convoId,\n          langCode,\n          text: translated\n        });\n        translation.save();\n        return translated;\n      }\n    }\n  });\n\n  const TRANSLATION_DETECT_LANG = 'translation.detectLang';\n  Meteor.methods({\n    'translation.detectLang'({text}) {\n      check(arguments[0], {\n        text: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(TRANSLATION_DETECT_LANG, 'Must be logged in to detect language.');\n      }\n\n      // Some language code like 'en', I assume the translate method will recognize it\n      return Microsoft.detect(text);\n    }\n  });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { Notes, Locks, Widgets, Convos } from '/lib/collections';\nimport Widget from '/lib/widget';\nimport R from 'ramda';\nimport { check, Match } from 'meteor/check';\n\nexport default function () {\n  const WIDGETS_ADD = 'widgets.add';\n  Meteor.methods({\n    'widgets.add'({noteId, type, data}) {\n      check(arguments[0], {\n        noteId: String,\n        type: String,\n        data: Match.Optional(Match.OneOf(undefined, null, Object)),\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(WIDGETS_ADD, 'Must be logged in to add widgets.');\n      }\n      const note = Notes.findOne(noteId);\n      if (!note) {\n        throw new Meteor.Error(WIDGETS_ADD, 'Must add widget to existing note.');\n      }\n      const convo = Convos.findOne(note.convoId);\n      if (!convo) {\n        throw new Meteor.Error(WIDGETS_ADD, 'Must add widgets to an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(WIDGETS_ADD, 'Must be a part of convo to add widgets.');\n      }\n\n      // Insert new widget\n      const widget = new Widget();\n      widget.set({\n        noteId,\n        type,\n        data: data ? data : null\n      });\n      widget.save();\n      const widgetId = widget._id;\n\n      // Insert widget id into note\n      const newWidgets = R.append(widgetId, note.widgetIds);\n      note.set({\n        widgetIds: newWidgets\n      });\n      note.save();\n    }\n  });\n\n  const WIDGETS_REMOVE = 'widgets.remove';\n  Meteor.methods({\n    'widgets.remove'({noteId, widgetId}) {\n      check(arguments[0], {\n        noteId: String,\n        widgetId: String\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must be logged in to add widgets.');\n      }\n      const note = Notes.findOne(noteId);\n      if (!note) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must add widget to existing note.');\n      }\n      const convo = Convos.findOne(note.convoId);\n      if (!convo) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must add widgets to an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must be a part of convo to add widgets.');\n      }\n\n      Widgets.remove(widgetId);\n\n      // Update note's widget array\n      const toDeleteIndex = R.findIndex(id => id === widgetId, note.widgetIds);\n      const newWidgets = R.remove(toDeleteIndex, 1, note.widgetIds);\n      note.set({\n        widgetIds: newWidgets\n      });\n      note.save();\n    }\n  });\n\n  Meteor.methods({\n    'widgets.move'({noteId, widgetId, position}) {\n      check(arguments[0], {\n        noteId: String,\n        widgetId: String,\n        position: Number\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must be logged in to add widgets.');\n      }\n      const note = Notes.findOne(noteId);\n      if (!note) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must add widget to existing note.');\n      }\n      const convo = Convos.findOne(note.convoId);\n      if (!convo) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must add widgets to an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must be a part of convo to add widgets.');\n      }\n\n      const indexToRemove = R.findIndex(i => i === widgetId)(note.widgetIds);\n      const widgetsLessRemoved = R.remove(indexToRemove, 1, note.widgetIds);\n      const newOrderedWidgets = R.insert(position, widgetId, widgetsLessRemoved);\n\n      note.set({\n        widgetIds: newOrderedWidgets\n      });\n      note.save();\n    }\n  });\n\n  Meteor.methods({\n    'widgets.update'({widgetId, data}) {\n      check(arguments[0], {\n        widgetId: String,\n        data: Object\n      });\n\n      const userId = this.userId;\n      if (!userId) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must be logged in to add widgets.');\n      }\n      const widget = Widgets.findOne(widgetId);\n      if (!widget) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must remove an existing widget.');\n      }\n      const note = Notes.findOne(widget.noteId);\n      if (!note) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must add widget to existing note.');\n      }\n      const convo = Convos.findOne(note.convoId);\n      if (!convo) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must add widgets to an existing convo.');\n      }\n      if (!convo.isUserInConvo(userId)) {\n        throw new Meteor.Error(WIDGETS_REMOVE, 'Must be a part of convo to add widgets.');\n      }\n\n      widget.set({data});\n      widget.save();\n\n      // To trigger the updated at change\n      note.set({\n        updatedAt: new Date()\n      });\n      note.save();\n    }\n  });\n}\n","import {Posts, Comments} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  Meteor.publish('posts.list', function () {\n    const selector = {};\n    const options = {\n      fields: {_id: 1, title: 1},\n      sort: {createdAt: -1},\n      limit: 10\n    };\n\n    return Posts.find(selector, options);\n  });\n\n  Meteor.publish('posts.single', function (postId) {\n    check(postId, String);\n    const selector = {_id: postId};\n    return Posts.find(selector);\n  });\n\n  Meteor.publish('posts.comments', function (postId) {\n    check(postId, String);\n    const selector = {postId};\n    return Comments.find(selector);\n  });\n}\n","import {Teams, Convos} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const CONVOS_LIST = 'convos.list';\n  Meteor.publish(CONVOS_LIST, function ({teamId}) {\n    check(arguments[0], {\n      teamId: String\n    });\n\n    if (!this.userId) {\n      throw new Meteor.Error(CONVOS_LIST, 'Must be logged in to get convos list.');\n    }\n    const team = Teams.findOne(teamId);\n    if (!team.isUserInTeam(this.userId)) {\n      throw new Meteor.Error(CONVOS_LIST, 'Must be a member of team to get team convos list.');\n    }\n\n    return Convos.find({teamId, userIds: this.userId});\n  });\n\n  const CONVOS_LIST_MULTI = 'convos.list.multi';\n  Meteor.publish(CONVOS_LIST_MULTI, function ({teamIds}) {\n    check(arguments[0], {\n      teamIds: [ String ]\n    });\n\n    if (!this.userId) {\n      throw new Meteor.Error(CONVOS_LIST_MULTI, 'Must be logged in to get convos list.');\n    }\n    const teams = Teams.find({_id: {$in: teamIds}}).fetch();\n    teams.forEach(team => {\n      if (!team.isUserInTeam(this.userId)) {\n        throw new Meteor.Error(CONVOS_LIST_MULTI, 'Must be a member of team to get team convos list.');\n      }\n    });\n    return Convos.find({teamId: {$in: teamIds}, userIds: this.userId});\n  });\n}\n","import test from './_myTest';\nimport teams from './teams';\nimport convos from './convos';\nimport msgs from './msgs';\nimport users from './users';\nimport notes from './notes';\nimport sections from './sections';\nimport notifications from './notifications';\nimport invites from './invites';\nimport translations from './translations';\nimport search from './search';\n\nexport default function () {\n  test();\n  teams();\n  convos();\n  msgs();\n  users();\n  notes();\n  sections();\n  notifications();\n  invites();\n  translations();\n  search();\n}\n","import {Invites} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const INVITES_LIST = 'invites.list';\n  Meteor.publish(INVITES_LIST, function () {\n    const userId = this.userId;\n    if (!userId) {\n      throw new Meteor.Error(INVITES_LIST, 'Must be logged in to get invites list.');\n    }\n\n    return Invites.find({userId});\n  });\n}\n","import {Mongo} from 'meteor/mongo';\nimport {Teams, Convos, Messages} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check, Match} from 'meteor/check';\nimport R from 'ramda';\nimport {PUBLISH_INTERVAL} from '/lib/constants/msgs';\n\nconst othersFields = {\n  username: 1,\n  roles: 1\n};\n\nexport default function () {\n  const MSGS_LIST = 'msgs.list';\n  Meteor.publish(MSGS_LIST, function ({convoId, currentNumMsgs}) {\n    check(arguments[0], {\n      convoId: String,\n      currentNumMsgs: Number\n    });\n\n    if (!this.userId) {\n      throw new Meteor.Error(MSGS_LIST, 'Must be logged in to get msgs list.');\n    }\n    const convo = Convos.findOne(convoId);\n    if (!convo) {\n      throw new Meteor.Error(MSGS_LIST, 'Can only retrieve messages from an existing convo.');\n    }\n    if (!convo.isUserInConvo(this.userId)) {\n      throw new Meteor.Error(MSGS_LIST, 'Must be a member of convo to get convo\\'s messages.');\n    }\n    const team = Teams.findOne(convo.teamId);\n    if (!team) {\n      throw new Meteor.Error(MSGS_LIST, 'Can only get messages from an existing team.');\n    }\n    if (!team.isUserInTeam(this.userId)) {\n      throw new Meteor.Error(MSGS_LIST, 'Must be a member of convo\\'s team to get msgs.');\n    }\n\n    const selector = {convoId};\n    const optionsLimit = {\n      sort: [ [ 'createdAt', 'desc' ] ],\n      limit: currentNumMsgs + PUBLISH_INTERVAL\n    };\n    const msgs = Messages.find(selector, optionsLimit).fetch();\n    const oldestDate = !R.isEmpty(msgs) ? R.last(msgs).createdAt : new Date(0);\n\n    // Selected by timestamp to prevent new msgs pushing previously seen msgs out\n    // when newly created msgs come in\n    const selectorTime = {convoId, createdAt: {$gte: oldestDate}};\n    let options = { sort: [ [ 'createdAt', 'asc' ] ] };\n\n    return [\n      Messages.find(selectorTime, options),\n      Meteor.users.find({_id: {$in: convo.userIds}}, {fields: othersFields})\n    ];\n  });\n\n  const MSGS_SEARCH_RESULT_OLDER = 'msgs.searchResult';\n  Meteor.publish(MSGS_SEARCH_RESULT_OLDER, function ({msgId, oldestMsgId, newestMsgId}) {\n    check(arguments[0], {\n      msgId: String,\n      oldestMsgId: Match.Optional(Match.OneOf(undefined, null, String)),\n      newestMsgId: Match.Optional(Match.OneOf(undefined, null, String))\n    });\n\n    const userId = this.userId;\n    if (!userId) {\n      throw new Meteor.Error(MSGS_SEARCH_RESULT_OLDER, 'Must be logged in to get search results.');\n    }\n    const msg = Messages.findOne(msgId);\n    if (!msg) {\n      throw new Meteor.Error(MSGS_SEARCH_RESULT_OLDER, 'Must get the results of an existing message.');\n    }\n    const convoId = msg.convoId;\n    const convo = Convos.findOne(convoId);\n    if (!convo) {\n      throw new Meteor.Error(MSGS_SEARCH_RESULT_OLDER, 'Must get the results of an existing convo.');\n    }\n    if (!convo.isUserInConvo) {\n      throw new Meteor.Error(MSGS_SEARCH_RESULT_OLDER, 'Must be a member of convo to search it.');\n    }\n    const team = Teams.findOne(convo.teamId);\n    if (!team) {\n      throw new Meteor.Error(MSGS_SEARCH_RESULT_OLDER, 'Must get the results of an existing team.');\n    }\n    if (!team.isUserInTeam(this.userId)) {\n      throw new Meteor.Error(MSGS_SEARCH_RESULT_OLDER, 'Must be a member of team to search it.');\n    }\n    if (oldestMsgId) {\n      if (!Messages.findOne(oldestMsgId)) {\n        throw new Meteor.Error(MSGS_SEARCH_RESULT_OLDER, 'Oldest message id must belong to an existing message.');\n      }\n    }\n\n    function _getOldestDate() {\n      const _getSelector = () => {\n        if (!oldestMsgId) { return {convoId, createdAt: {$lte: msg.createdAt}}; }\n\n        const oldestMsg = Messages.findOne(oldestMsgId);\n        return {convoId, createdAt: {$lte: oldestMsg.createdAt}};\n      };\n\n      const options = {\n        sort: [ [ 'createdAt', 'desc' ] ],\n        limit: PUBLISH_INTERVAL\n      };\n\n      const msgs = Messages.find(_getSelector(), options).fetch();\n      return !R.isEmpty(msgs) ? R.last(msgs).createdAt : new Date(0);\n    }\n\n    function _getNewestDate() {\n      const _getSelector = () => {\n        if (!newestMsgId) { return {convoId: msg.convoId, createdAt: {$gte: msg.createdAt}}; }\n\n        const newestMsg = Messages.findOne(newestMsgId);\n        return {convoId, createdAt: {$gte: newestMsg.createdAt}};\n      };\n      const options = {\n        sort: [ [ 'createdAt', 'asc' ] ],\n        limit: PUBLISH_INTERVAL\n      };\n\n      const msgs = Messages.find(_getSelector(), options).fetch();\n      return !R.isEmpty(msgs) ? R.last(msgs).createdAt : new Date(0);\n    }\n\n    // Publish older msgs using time threshold\n    let optionsAsc = { sort: [ [ 'createdAt', 'asc' ] ] };\n    const selectorTimeOld = {\n      convoId,\n      createdAt: {$gte: _getOldestDate(), $lte: msg.createdAt}\n    };\n    Mongo.Collection._publishCursor(\n      Messages.find(selectorTimeOld, optionsAsc), this, 'searchMessages');\n\n    // Publish newer msgs using time threshold\n    const selectorTimeNew = {\n      convoId,\n      createdAt: {$lte: _getNewestDate(), $gte: msg.createdAt}\n    };\n    Mongo.Collection._publishCursor(\n      Messages.find(selectorTimeNew, optionsAsc), this, 'searchMessages');\n\n    // Users\n    const userSelector = {_id: {$in: convo.userIds}};\n    const userOptions = {fields: othersFields};\n    Mongo.Collection._publishCursor(Meteor.users.find(userSelector, userOptions), this, 'users');\n\n    this.ready();\n  });\n}\n","import {Convos, Notes, Teams, Widgets, Locks} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const NOTES_SINGLE = 'notes.single';\n  Meteor.publish(NOTES_SINGLE, function ({convoId}) {\n    check(arguments[0], {\n      convoId: String\n    });\n\n    if (!this.userId) {\n      throw new Meteor.Error(NOTES_SINGLE, 'Must be logged in to get note.');\n    }\n    const convo = Convos.findOne(convoId);\n    if (!convo) {\n      throw new Meteor.Error(NOTES_SINGLE, 'Must get a note from an existing convo.');\n    }\n    const team = Teams.findOne(convo.teamId);\n    if (!team) {\n      throw new Meteor.Error(NOTES_SINGLE, 'Must get a note from a convo in an existing team.');\n    }\n    if (!team.isUserInTeam(this.userId)) {\n      throw new Meteor.Error(NOTES_SINGLE, 'Must be a member of team to get note.');\n    }\n    if (!convo.isUserInConvo(this.userId)) {\n      throw new Meteor.Error(NOTES_SINGLE, 'Must be a member of convo to get the convo\\'s note.');\n    }\n\n    const note = Notes.findOne({convoId});\n    const noteId = note._id;\n\n    return [\n      Notes.find({convoId}),\n      Widgets.find({noteId}),\n      Locks.find({noteId})\n    ];\n  });\n}\n","import {Notifications, Teams} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check, Match} from 'meteor/check';\n\nexport default function () {\n  const NOTIFICATIONS_LIST = 'notifications.list';\n  Meteor.publish(NOTIFICATIONS_LIST, function ({teamId, convoId}) {\n    check(arguments[0], {\n      teamId: String,\n      convoId: Match.Optional(Match.OneOf(undefined, null, String))\n    });\n\n    if (!this.userId) {\n      throw new Meteor.Error(NOTIFICATIONS_LIST, 'Must be logged in to get notifications.');\n    }\n    const team = Teams.findOne(teamId);\n    if (!team) {\n      throw new Meteor.Error(NOTIFICATIONS_LIST,\n        'Must be a member of team to get notifications from it.');\n    }\n\n    return Notifications.find({\n      userId: this.userId,\n      teamId,\n      convoId: {$ne: convoId}\n    });\n  });\n}\n","import {Mongo} from 'meteor/mongo';\nimport {Teams, Messages, Convos} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\nimport R from 'ramda';\nimport {othersFields} from './users';\n\nconst buildRegExp = (searchText) => {\n  let words = searchText.trim().split(/[ \\-\\:]+/);\n  let exps = words.map(word => `(?=.*${word})`);\n  let fullExp = exps.join('') + '.+';\n  return new RegExp(fullExp, 'i');\n};\n\nexport default function () {\n  const SEARCH_RESULTS = 'search.results';\n  Meteor.publish(SEARCH_RESULTS, function ({teamId, text}) {\n    check(arguments[0], {\n      teamId: String,\n      text: String\n    });\n\n    const userId = this.userId;\n    if (!userId) {\n      throw new Meteor.Error(SEARCH_RESULTS, 'Must be logged in to search.');\n    }\n    const team = Teams.findOne(teamId);\n    if (!team) {\n      throw new Meteor.Error(SEARCH_RESULTS, 'Must search an existing team.');\n    }\n    if (!team.isUserMember(userId)) {\n      throw new Meteor.Error(SEARCH_RESULTS, 'Must be a member of a team to search it.');\n    }\n\n    const convosUserIsMember = Convos.find({userIds: userId});\n    const convoIds = convosUserIsMember.map(convo => convo._id);\n\n    const _getMsgs = () => {\n      const selector = {\n        convoId: { $in: convoIds },\n        $text: { $search: text }\n      };\n      const options = {\n        fields: { score: { $meta: 'textScore' } },\n        sort: { score: { $meta: 'textScore' } },\n        limit: 10\n      };\n      Mongo.Collection._publishCursor(\n        Messages.find(selector, options), this, 'searchMessages');\n    };\n\n    const _getConvos = () => {\n      const selector = {\n        userIds: userId,\n        $text: { $search: text }\n      };\n      const options = {\n        fields: { score: { $meta: 'textScore' } },\n        sort: { score: { $meta: 'textScore' } },\n        limit: 10\n      };\n      Mongo.Collection._publishCursor(\n        Convos.find(selector, options), this, 'convos');\n    };\n\n    const _getUsers = () => {\n      const regExp = buildRegExp(text);\n      const selector = {\n        $and: [\n          {\n            $or: [\n              {[`roles.${teamId}`]: 'admin'},\n              {[`roles.${teamId}`]: 'member'}\n            ]\n          },\n          {\n            $or: [\n              {username: regExp},\n              {'emails.address': regExp}\n            ]\n          }\n        ]\n        // $text: { $search: text }\n      };\n\n      const fieldsObj = R.merge({\n        // score: { $meta: 'textScore' }\n      }, othersFields);\n\n      const options = {\n        fields: fieldsObj,\n        // sort: { score: { $meta: 'textScore' } },\n        limit: 10\n      };\n      Mongo.Collection._publishCursor(\n        Meteor.users.find(selector, options), this, 'users');\n    };\n\n    _getMsgs();\n    _getConvos();\n    _getUsers();\n\n    this.ready();\n  });\n}\n","import {Convos, Notes, Sections} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const SECTIONS = 'sections';\n  Meteor.publish(SECTIONS, function ({noteId}) {\n    check(arguments[0], {\n      noteId: String\n    });\n\n    if (!this.userId) {\n      throw new Meteor.Error(SECTIONS, 'Must be logged in to get note sections.');\n    }\n    const note = Notes.findOne(noteId);\n    if (!note) {\n      throw new Meteor.Error(SECTIONS, 'Must get sections from existing note.');\n    }\n    const convo = Convos.findOne(note.convoId);\n    if (!convo) {\n      throw new Meteor.Error(SECTIONS, 'Must get a note from an existing convo.');\n    }\n    if (!convo.isUserInConvo(this.userId)) {\n      throw new Meteor.Error(SECTIONS, 'Must be a member of convo to get the convo\\'s note.');\n    }\n\n    return Sections.find({noteId});\n  });\n}\n","import {Teams, Notifications, Invites} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check, Match} from 'meteor/check';\nimport R from 'ramda';\n\n/*  If you restrict the data you publish,\n  the Astro Class will fill in the rest of the specified fields with null\n  Also, if you don't restrict to only the client data,\n  you will get\n  Trying to set a value of the \"serverOnly\" field that does not exist in the \"X\" class\n*/\nexport default function () {\n  const TEAMS_LIST = 'teams.list';\n  Meteor.publish(TEAMS_LIST, function (args) {\n    check(args, Match.Optional(Match.OneOf(undefined, null, Object))); // Use this until Match.Maybe works, https://github.com/meteor/meteor/issues/3876\n    if (args) {\n      check(args, {\n        teamId: Match.Optional(Match.OneOf(undefined, null, String)),\n        convoId: Match.Optional(Match.OneOf(undefined, null, String))\n      });\n    }\n\n    const userId = this.userId;\n    if (!userId) {\n      throw new Meteor.Error(TEAMS_LIST, 'Must be logged in to get teams list.');\n    }\n\n    // Notifications\n    function mergeTeamId(selectObj) {\n      if (!args) { return selectObj; }\n      if (args.teamId) { return R.merge(selectObj, {teamId: {$ne: args.teamId}}); }\n      return selectObj;\n    }\n    function mergeConvoId(selectObj) {\n      if (!args) { return selectObj; }\n      if (args.convoId) { return R.merge(selectObj, {convoId: {$ne: args.convoId}}); }\n      return selectObj;\n    }\n    const getSelector = R.compose(mergeConvoId, mergeTeamId);\n    const selectUserId = {userId};\n    const notifsSelector = getSelector(selectUserId);\n\n    return [\n      Teams.find({userIds: userId}),\n      Notifications.find(notifsSelector),\n      Invites.find()\n    ];\n  });\n\n  const TEAMS_SINGLE = 'teams.single';\n  Meteor.publish(TEAMS_SINGLE, function ({teamId}) {\n    check(arguments[0], {\n      teamId: String\n    });\n\n    const userId = this.userId;\n    if (!userId) {\n      throw new Meteor.Error(TEAMS_SINGLE, 'Must be logged in to get team.');\n    }\n    const team = Teams.findOne(teamId);\n    if (!team.isUserInTeam(userId)) {\n      throw new Meteor.Error(TEAMS_SINGLE, 'Must be a member of team to get team info.');\n    }\n\n    const userFields = {\n      username: 1,\n      [`roles.${teamId}`]: 1,\n      emails: 1\n    };\n    const userSelector = { // Have to do it this way since {_id: {$in: team.userIds}} isn't reactive\n      [`roles.${teamId}`]: {$exists: true}\n    };\n\n    return [\n      Meteor.users.find(userSelector, {fields: userFields}),\n      Teams.find(teamId),\n      Invites.find({teamId})\n    ];\n  });\n}\n","import {Convos, Teams, Translations} from '/lib/collections';\nimport {Meteor} from 'meteor/meteor';\nimport {check} from 'meteor/check';\n\nexport default function () {\n  const TRANSLATIONS_LIST = 'translations.list';\n  Meteor.publish(TRANSLATIONS_LIST, function ({msgIds, convoId}) {\n    check(arguments[0], {\n      msgIds: [ String ],\n      convoId: String\n    });\n\n    const userId = this.userId;\n    if (!userId) {\n      throw new Meteor.Error(TRANSLATIONS_LIST, 'Must be logged in to get translations.');\n    }\n    const user = Meteor.users.findOne(userId);\n    const convo = Convos.findOne(convoId);\n    if (!convo) {\n      throw new Meteor.Error(TRANSLATIONS_LIST, 'Must get translations from an existing convo.');\n    }\n    const team = Teams.findOne(convo.teamId);\n    if (!team) {\n      throw new Meteor.Error(TRANSLATIONS_LIST,\n        'Must get translations from a convo in an existing team.');\n    }\n    if (!team.isUserInTeam(this.userId)) {\n      throw new Meteor.Error(TRANSLATIONS_LIST, 'Must be a member of team to get translations.');\n    }\n    if (!convo.isUserInConvo(this.userId)) {\n      throw new Meteor.Error(TRANSLATIONS_LIST,\n        'Must be a member of convo to get the convo\\'s translations.');\n    }\n\n    const langCode = user.translationLangCode;\n    return Translations.find({convoId, msgId: {$in: msgIds}, langCode});\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Convos, Teams} from '/lib/collections';\nimport {check} from 'meteor/check';\nimport R from 'ramda';\n\nconst selfFields = {\n  lastTimeInConvo: 1,\n  lastTimeInTeam: 1,\n  profileImageUrl: 1,\n  translationLangCode: 1\n};\n\nexport const othersFields = {\n  username: 1,\n  emails: 1,\n  profileImageUrl: 1\n};\n\nexport default function () {\n  const SELF = 'self';\n  Meteor.publish(null, function () {\n    if (!this.userId) {\n      throw new Meteor.Error(SELF, 'Must be logged in to get self data.');\n    }\n\n    return Meteor.users.find(this.userId, {fields: selfFields});\n  });\n\n  const USERS_LIST = 'users.list';\n  Meteor.publish(USERS_LIST, function () {\n    if (!this.userId) {\n      throw new Meteor.Error(USERS_LIST, 'Must be logged in to get users list.');\n    }\n    return Meteor.users.find(null, {fields: othersFields});\n  });\n\n  const USERS_TEAM = 'users.team';\n  Meteor.publish(USERS_TEAM, function ({teamId}) {\n    check(arguments[0], {\n      teamId: String\n    });\n\n    if (!this.userId) {\n      throw new Meteor.Error(USERS_TEAM, 'Must be logged in to get team users list.');\n    }\n    const team = Teams.findOne(teamId);\n    if (!team) {\n      throw new Meteor.Error(USERS_TEAM, 'Must get users from an existing team.');\n    }\n    if (!team.isUserInTeam(this.userId)) {\n      throw new Meteor.Error(USERS_TEAM, 'Must be a part of team to get team users list.');\n    }\n\n    const fields = R.merge(othersFields, {\n      [`roles.${teamId}`]: 1\n    });\n    const selector = {\n      [`roles.${teamId}`]: {$exists: true}\n    };\n    return Meteor.users.find(selector, {fields});\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {SearchSource} from 'meteor/meteorhacks:search-source';\n\nexport const buildRegExp = (searchText) => {\n  let words = searchText.trim().split(/[ \\-\\:]+/);\n  let exps = words.map(word => `(?=.*${word})`);\n  let fullExp = exps.join('') + '.+';\n  return new RegExp(fullExp, 'i');\n};\n\nexport default function () {\n  SearchSource.defineSource('allUsers', function (searchText, _options) {\n    const defaultOptions = {\n      sort: {username: 1},\n      limit: 10,\n      fields: {username: 1, emails: 1}\n    };\n    const options = _options ? _options : defaultOptions;\n\n    if (searchText) {\n      const regExp = buildRegExp(searchText);\n      const selector = {$or: [\n        {username: regExp},\n        {'emails.address': regExp}\n      ]};\n      return Meteor.users.find(selector, options).fetch();\n    }\n    return [];\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Cloudinary} from 'meteor/lepozepo:cloudinary';\n\nexport default function () {\n  Cloudinary.config({\n    cloud_name: Meteor.settings.cloudinary.cloud_name,\n    api_key: Meteor.settings.cloudinary.api_key,\n    api_secret: Meteor.settings.cloudinary.api_secret\n  });\n}\n","import {Meteor} from 'meteor/meteor';\nimport {Teams} from '/lib/collections';\nimport R from 'ramda';\nimport _ from 'lodash';\n\nexport default function () {\n  Meteor.startup(function () {\n    const isLocalhost = Meteor.absoluteUrl().indexOf('localhost') > -1;\n    console.log(`isLocalhost ${Meteor.absoluteUrl()} ${isLocalhost}`);\n    if (!isLocalhost) {\n      const username = encodeURIComponent(Meteor.settings.mailgun.address);\n      const password = encodeURIComponent(Meteor.settings.mailgun.password);\n      const host = encodeURIComponent(`smtp.mailgun.org`);\n      const port = 587;\n\n      process.env.MAIL_URL = `smtp://${username}:${password}@${host}:${port}`;\n    }\n  });\n\n  Accounts.urls.enrollAccount = (token) => {\n    return Meteor.absoluteUrl(`invite/${token}`);\n  };\n  Accounts.urls.resetPassword = (token) => {\n    return Meteor.absoluteUrl(`reset/${token}`);\n  };\n\n  Accounts.emailTemplates.siteName = 'Olis';\n  Accounts.emailTemplates.from = 'Olis <contact.aheadstudios@gmail.com>';\n\n  // Enroll account email\n  Accounts.emailTemplates.enrollAccount.subject = function (user) {\n    console.log('enrollAccount subject');\n    console.log(user);\n\n    // const prepend = `Welcome to Olis, ${user.username}!`;\n    // const text =\n    //   user.invitedBy ? `${prepend} An account has been created for you by ${user.invitedBy}.` :\n    //   `${prepend}`;\n    const text = user.invitedBy ? `${user.invitedBy} has invited you to join Olis` : `Welcome to Olis!`;\n    return text;\n  };\n\n  Accounts.emailTemplates.enrollAccount.text = function (user, url) {\n    console.log('enrollAccount text');\n    console.log(user);\n    const team = Teams.findOne(R.keys(user.roles)[0]);\n\n    const append =\n      `In order to setup your account, click the link below:\\n\\n\n      ${url}`;\n\n    if (user.invitedBy) {\n      Meteor.users.update(user._id, {\n        $unset: {invitedBy: ''}\n      });\n      const text = `${user.invitedBy} has invited you to join ${team.name}, their team on Olis. \\n\\n${append}`;\n      return text;\n    }\n\n    if (user.findingMyTeam) {\n      Meteor.users.update(user._id, {\n        $unset: {findingMyTeam: ''}\n      });\n\n      const teams = Teams.find({userIds: user._id}).fetch();\n      const teamsList = teams.reduce((prev, curr) => {\n        if (prev === '') { return `${curr.name}\\n`; }\n        return `${prev}\\n${curr.name}\\n`;\n      }, '');\n\n      const text = `Here are a list of the teams you belong to:\\n\\n\n        ${teamsList}\\n\n        ${append}`;\n      return text;\n    }\n    return append;\n  };\n\n  // Reset password email\n  Accounts.emailTemplates.resetPassword.subject = function (user) {\n    // console.log('resetPassword subject');\n    // console.log(user);\n    if (user.isRegistering || !_.has(user, 'services.password.bcrypt')) {\n      return `Welcome to Olis ${user.username}! Set Your Olis Account Password.`;\n    }\n    return `Reset Your Olis Account Password`;\n  };\n  Accounts.emailTemplates.resetPassword.text = function (user, url) {\n    // console.log('resetPassword text');\n    // console.log(user);\n\n    if (user.isRegistering || !_.has(user, 'services.password.bcrypt')) {\n      Meteor.users.update(user._id, {\n        $unset: {isRegistering: ''}\n      });\n\n      const text = `To setup your password so that you can log into your account, click the link below:\\n\\n\n        ${url}`;\n      return text;\n    }\n    const text = `If you did not recently request to reset your password, you can ignore this email.\\n\n      To reset your password, click the link below:\\n\\n\n      ${url}`;\n    return text;\n  };\n}\n","import publications from './publications';\nimport methods from './methods';\nimport setupEmail from './email';\nimport setupUserSearchSource from './SearchSource';\nimport setupCloudinary from './cloudinary';\nimport {buildIndexes} from '/lib/collections';\n\npublications();\nmethods();\nsetupEmail();\nsetupUserSearchSource();\nsetupCloudinary();\nbuildIndexes();\n","module.exports = function (wallaby) {\n  // There is a weird error with the mui and mantra.\n  // See: https://goo.gl/cLH8ib\n  // Using require here seems to be the error.\n  // Renaming it into `load` just fixed the issue.\n  var load = require;\n\n  return {\n    files: [\n      'client/modules/**/components/*.jsx',\n      'client/modules/**/actions/*.js',\n      'client/modules/**/containers/*.js',\n      'client/modules/**/libs/*.js'\n    ],\n    tests: [\n      'client/**/tests/*.js'\n    ],\n    compilers: {\n       '**/*.js*': wallaby.compilers.babel({\n         babel: load('babel-core'),\n         presets: ['es2015', 'stage-2', 'react']\n       })\n    },\n    env: {\n      type: 'node'\n    },\n    testFramework: 'mocha'\n  };\n};\n"]}